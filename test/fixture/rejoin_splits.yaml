'2007-11':
  - |
    From: James <james@rantingextreme.com>
    Date: Wed, 21 Nov 2007 14:44:22 GMT
    Subject: [MUD-Dev2] Player Choice - How Much is Too Much?
    Message-ID: <1195656163.24637.1222558147@webmail.messagingengine.com>
    
    "cruise" <cruise@casual-tempest.net> wrote:
    
    > Since everyone's run out of things to say, I figured I might as well start
    > another argument :P
    >
    > It's been stated several times by various people that a game designer
    > shouldn't tell players how to play the game. That players should have the
    > choice to play like they want to.
    >
    > Now, I'm big on player choice - to me it's one of the fundamentals that
    > makes a game not a movie. Saying that, I'm not sure I can truly agree that
    > a game designer can't tell players how to play the game.
    >
    > Surely, we're doing that to some extent /just by making the game/. If I'm
    > playing Magic:the Gathering, then I expect a strategic card game - sure I
    > can use the cards to proxy as 40k models, but I'm not playing M:tG
    > anymore, and I can expect anyone who's trying to play M:tG to be rather
    > annoyed.
    >
    > If I use WoW to produce LotR machinima, then similarly I'm not playing
    > WoW. That isn't "how I want to play WoW." It just isn't WoW.
    >
    > While taking away all the player's choice means it's no longer a game,
    > limiting them to a certain degree is pretty much the point of making game
    > rules. We should and, I'd say, must, tell the players how to play the
    > game.
    >
    > Looking at the world around us it becomes patently obvious that people
    > don't make choices that will be best for them. Can I get the hell out of
    > bed in the morning, even though I know it means I get home earlier, and
    > might actually eat this side of 9pm? Heck no. The most enjoyable moment
    > for me in a MMOG was RP'ing in a MUD. Does that mean I RP all the time?
    > Hah! Too much effort, even though a part of me knows it would be
    > well-rewarded.
    >
    > Players do not know what will be fun. That's why game-design is hard. A
    > good game designer /does/ know better than the players what they will
    > enjoy - if he didn't he wouldn't be a good game designer.
    >
    > The important caveat, of course, is that players hate to feel like their
    > choices are being deliberately limited - the old "invisible wall" at the
    > edge of a game area, for example, when a chasm would achieve the same
    > effect but not feel forced. I suspect this is what most people object to -
    > not the removal of choices, but the obviousness with which they are
    > removed (such as a "nerf" in MMOG's - having the previous performance to
    > compare to, any such limitation will be obvious).
    
    Agreed on a number of levels. The most frustrating and atmosphere
    breaking example I know of is the 2D 'maze' like design of Guild Wars
    where you literally can't fall down a low slope, or really stray from
    the roads. This instantly limited my immersion (along with not being
    able to jump at all (I mean, come on, jumping is a universal videogame
    paradigm!) and made the world seem that much more arbitrary and
    constructed.
    
    An interesting example I was pondering recently (apologies if this is
    too specific) is the recently changed Alterac Valley in WoW.
    
    To set the scene, for those that don't know: this is a huge 40 vs 40
    instanced battleground (i.e. PvP area with objectives). Players earn
    honor for a number of objectives, though the honor earned even for a win
    is small in comparison with the honor required to buy items afterwards
    (~500 for a full win (80-300 for a loss, depending) compared to 12,000
    for an item purchase). It also has an asymmetrical map design.
    
    The problem is two fold- first the need to repeat the games many times
    to earn significant points to purchase rewards. This means players are
    instantly driven to 'grind' the battleground many times and look to
    maximise their honor per hour. This often means games are simply races
    to kill the opposing sides NPC general and win, with little PvP combat
    taking place. This is boring, but efficient, and no fun for the players
    involved. On the opposite end, sometimes games occur with lots of
    interaction, solid base defence and cunning strategies. But even whilst
    enjoying this, there's the nagging feeling of inefficiency - you'd've
    been better off in 3 fast boring games.
    
    The second problem is that you're 40 random people per side. Recently
    Blizzard changed the rules to address the 'race to kill the general'
    problem, forcing players to capture a series of other objectives before
    the enemy general was killable. Only now, still, it's VERY hard to
    encourage players to defend their objectives. Now it's just a race to
    capture them and kill the general as fast as possible. This is despite
    the fact the most EFFICIENT approach has now changed- if 10 people play
    objective defence, they can potentially turn a 50/50 win ratio into a
    90/10 one. But that requires teamwork between random people, something
    exceptionally hard to acheive emergently (even with someone shouting in
    general chat (!), and something the battleground design self-evidently
    still fails to do. "Most" players seem to follow an internal program of:
    "Ressurect at the nearest controlled graveyard -> ride about towards the
    enemy base until I see an opponent -> kill them/die -> back to ride
    about stage/back to graveyard -> go back to step 1". At this level of
    player behaviour, the map asymmetry becomes the deciding factor, since
    it channels players following these rules in ways more favourable to one
    side (the Alliance).
    
    I guess my question is- how do you design an open and objective based
    pvp game, and encourage players into the proper group helping behaviours
    they should be doing? These are ALREADY the optimal behaviours in terms
    of honor/hour but that doesn't seem to be enough. I've often thought
    that it needs a Battlefield 2 style 'commander' role that can actually
    mark the map and 'officially' direct groups of players- it certainly
    works quite well in that game, but then maybe it's a completely
    different mindset.
    
    The interesting thing about Alterac Valley is that it has been changed
    many many times over the last year or so and still doesn't work. And
    Blizzard aren't stupid. Maybe 40 vs 40 PvP 'points' grinding is just
    incompatible with fun/engaging/intelligent gameplay fullstop?
    
    -J
  - |
    From: Jean, Yannick <yannick.jean@cgi.com>
    Date: Tue, 27 Nov 2007 18:21:36 GMT
    Subject: [MUD-Dev2] Player Choice - How Much is Too Much?
    Message-ID: <1196187667.21215.1223519053@webmail.messagingengine.com>
    
    John Buehler wrote : 
     
    > (...)
    >  So I would claim that it's not an issue of removal so much as an overall
    > pattern of designers walking players into dead ends in the structure of
    > their entertainment.  Imagine if there was a den of progressively more
    > difficult monsters, and a group is fighting their way to the climax of the
    > encounter when they enter a cavernous room and...
    >
    > They find a couple of standard NPC merchants. (...)
     
     
    Perfect description of what current MMORPG end-game feel for the
    almost-exclusively soloing Joe Average.
  - |
    From: Miroslav Silovic <miroslav.silovic@avl.com>
    Date: Tue, 27 Nov 2007 18:27:52 GMT
    Subject: [MUD-Dev2] Player Choice - How Much is Too Much?
    Message-ID: <1196188048.22546.1223520349@webmail.messagingengine.com>
    
    Christopher Lloyd wrote:
    >
    >> Players do not know what will be fun. That's why game-design is hard.
    >> A good game designer /does/ know better than the players what they 
    >> will enjoy - if he didn't he wouldn't be a good game designer.
    >>     
    >
    > Players seem to know what will be fun -for the immediate short term-.
    > Players (and sometimes administrators) might think up something cool
    > that works at the time, but detracts from the game experience further
    > down the line.
    >
    > An example that I've experienced: Take a fairly narrow themed world
    > (Star Wars or WoW). It's the end of October in real life, what are
    > people are thinking about? Halloween. And... y'know what would be
    > really cool? If we could have pumpkins in the game. Yeah! And... ghost
    > costumes and stuff. Lets make some of those! And we can have witches
    > hats (for the female spellcaster types), broomstick and cobweb objects
    > that we can put up in houses and stuff. Yeah. How cool is THIS?
    >   
    
    Actually Guild Wars does exactly this. Well, they do it as a weeklong 
    event, with cities redecorated extra-dark, and the arrival of the Mad 
    King that forces players to do things (and insta-kills those that fails,
     with a resurrect a few seconds later). And pumpkins, and witch-hats,
    and  holiday drinks.
    
    And it works for Guild Wars. Holiday events became something that 
    players like and expect. They also have in-game lore that translates 
    real-life events into the game-world equivalents (Halloween -> Return of
     the Mad King, New Year -> Wintersday, Chinese New Year -> Canthan New
    Year).
    
    I think cruise here overstated his argument, because in my opinion, 
    certain game design decisions simply don't matter. In this example, 
    doing holiday events works. But not doing holiday events also works - it
     will just change the subculture that forms around your game, but will 
    probably not affect the core issues, the principal being the amount of 
    fun your players have. So I'd say that certain -parts- of the game 
    design are hard, and the designers should try to identify those and 
    retain control. For everything else, listening to the players is the 
    obvious thing to do.
    
        Miro
  - |
    From: Christopher Lloyd <llocr@btinternet.com>
    Date: Wed, 21 Nov 2007 14:47:32 GMT
    Subject: [MUD-Dev2] Player Choice - How Much is Too Much?
    In-Reply-To: <4742D87E.7020701@casual-tempest.net>
    Message-ID: <205241.79781.qm@web86103.mail.ird.yahoo.com>
    
    --- cruise <cruise@casual-tempest.net> wrote:
    
    > Since everyone's run out of things to say, I figured I might as well 
    > start another argument :P
    
    I'm sure wars have been started over less ;)
    
    <lots of snippage>
    
    > Players do not know what will be fun. That's why game-design is hard.
    > A good game designer /does/ know better than the players what they 
    > will enjoy - if he didn't he wouldn't be a good game designer.
    
    Players seem to know what will be fun -for the immediate short term-.
    Players (and sometimes administrators) might think up something cool
    that works at the time, but detracts from the game experience further
    down the line.
    
    An example that I've experienced: Take a fairly narrow themed world
    (Star Wars or WoW). It's the end of October in real life, what are
    people are thinking about? Halloween. And... y'know what would be
    really cool? If we could have pumpkins in the game. Yeah! And... ghost
    costumes and stuff. Lets make some of those! And we can have witches
    hats (for the female spellcaster types), broomstick and cobweb objects
    that we can put up in houses and stuff. Yeah. How cool is THIS?
    
    Probably quite cool for a few days. But after that you might be left
    wondering "did that really contribute to my game world and the
    background we spend months writing?". Does "seling out" pay out?
    
    Perhaps player activity went up for a couple of weeks. Your bandwidth
    clogged a little. Maybe a reviewer turned up looking for a decent
    roleplay server and turned around straight away when he saw the plastic
    ghoul costmes for sale in the Jedi headquarters.
    
    On the other hand, maybe it did help your game. Perhaps you got a few
    more subscriptions during halloween. Maybe players wiling to pay for
    custom content spent some money. Maybe "selling out" really paid out as
    well.
    
    > The important caveat, of course, is that players hate to feel like
    > their choices are being deliberately limited - the old "invisible
    > wall" at the edge of a game area, for example, when a chasm would 
    > achieve the same effect but not feel forced. I suspect this is what 
    > most people object to - not the removal of choices, but the 
    > obviousness with which they are removed (such as a "nerf" in MMOG's -
    
    > having the previous performance to compare to, any such limitation 
    > will be obvious).
    
    I know players who have spent days trying to cross that magical barrier
    or deep chasm (and, having given up and moved on, still come back to
    look at it and think). They wonder if it's part of the game (and if it
    isn't the roleplayers will still pretend it is). Which isn't such a bad
    thing, actually. If your players have an interest in something, feed
    it! Maybe that blank magical barrier will come down one day, or maybe
    someone will "discover" a way to climb down the chasm some time in the
    future.
    
    C.
    
    -- 
    
    Christopher Lloyd
    
    Email: crl199@alumni.soton.ac.uk
    Tel:   +44 (0) 7718 542837
  - |
    From: cruise <cruise@casual-tempest.net>
    Date: Tue, 20 Nov 2007 16:46:14 GMT
    Subject: [MUD-Dev2] Player Choice - How Much is Too Much?
    Message-ID: <4742D87E.7020701@casual-tempest.net>
    
    Since everyone's run out of things to say, I figured I might as well 
    start another argument :P
    
    It's been stated several times by various people that a game designer 
    shouldn't tell players how to play the game. That players should have 
    the choice to play like they want to.
    
    Now, I'm big on player choice - to me it's one of the fundamentals that 
    makes a game not a movie. Saying that, I'm not sure I can truly agree 
    that a game designer can't tell players how to play the game.
    
    Surely, we're doing that to some extent /just by making the game/. If 
    I'm playing Magic:the Gathering, then I expect a strategic card game - 
    sure I can use the cards to proxy as 40k models, but I'm not playing 
    M:tG anymore, and I can expect anyone who's trying to play M:tG to be 
    rather annoyed.
    
    If I use WoW to produce LotR machinima, then similarly I'm not playing 
    WoW. That isn't "how I want to play WoW." It just isn't WoW.
    
    While taking away all the player's choice means it's no longer a game, 
    limiting them to a certain degree is pretty much the point of making 
    game rules. We should and, I'd say, must, tell the players how to play 
    the game.
    
    Looking at the world around us it becomes patently obvious that people 
    don't make choices that will be best for them. Can I get the hell out of 
    bed in the morning, even though I know it means I get home earlier, and 
    might actually eat this side of 9pm? Heck no. The most enjoyable moment 
    for me in a MMOG was RP'ing in a MUD. Does that mean I RP all the time? 
    Hah! Too much effort, even though a part of me knows it would be 
    well-rewarded.
    
    Players do not know what will be fun. That's why game-design is hard. A 
    good game designer /does/ know better than the players what they will 
    enjoy - if he didn't he wouldn't be a good game designer.
    
    The important caveat, of course, is that players hate to feel like their 
    choices are being deliberately limited - the old "invisible wall" at the 
    edge of a game area, for example, when a chasm would achieve the same 
    effect but not feel forced. I suspect this is what most people object to 
    - not the removal of choices, but the obviousness with which they are 
    removed (such as a "nerf" in MMOG's - having the previous performance to 
    compare to, any such limitation will be obvious).
  - |
    From: cruise <cruise@casual-tempest.net>
    Date: Tue, 27 Nov 2007 18:25:55 GMT
    Subject: [MUD-Dev2] Player Choice - How Much is Too Much?
    In-Reply-To: <BAYC1-PASMTP13CAB918E1655F763BA0A7B47F0@CEZ.ICE>
    References: <4742D87E.7020701@casual-tempest.net>
          <BAYC1-PASMTP13CAB918E1655F763BA0A7B47F0@CEZ.ICE>
    Message-ID: <474ABF99.3010607@casual-tempest.net>
    
    Apologies for not replying for a few days - I'd been meaning to post 
    that mail for a while, and only remembered the day I went on holiday...
    
    Okay, general replies, to avoid quote hell:
    
    The Magician's choice doesn't really work well in a game, unless you 
    expect the player to only play through once - the moment they die/reload 
    and make another choice, play through again, or even just discuss the 
    game with a friend, they'll figure out that there were no actual 
    choices. re: the complaints that quests are pointless because they never 
    change the game world of an MMOG.
    
    I was actually expecting more debate over the core statement - I 
    remember quite a few vehemently insisting that they be allowed to play 
    the game how they like - maybe they're on holiday too :P It's certainly 
    the mindset of the players - if you read any board you'll see all sorts 
    of posts complaining that they can't do X, and since they pay their 
    subscription they have a right to be able to do so.
    
    Perhaps the better question, since there appears to be a simple answer 
    to my original one, is how do we prevent players from figuring out that 
    their choices are being restricted when guiding them?
    
    Using James' example - how do you make some players stay and defend an 
    objective, without explicitly immob'ing a random % of the playerbase? To 
    me it seems quite a simple behavioural training problem.
    
    WoW uses rewards to train - do this; gain xp (or honour in this case). 
    In the PvP game, defending an objective isn't immediately connected with 
    the victory, and so is ignored in favour of what the game /is telling 
    them/ will lead to victory (and the reward).
    
    The quick answer is to add honour points to defending an objective (lie, 
    say, TF2) or at the least listing "defend the objective" somewhere 
    obvious when it is in danger, so it becomes associated with the victory 
    in the players' minds.
    
    My preferred solution would be to change the game to encourage players 
    to think further ahead than just immediate rewards. But that's never 
    going to happen, and is a general complaint about most MMOG's today.
    
    Okay, one quote:
    Thus spake Sean Howard:
     >That's why I think we should stop thinking of MMOGs as games. What they
     >really seem to be are shared environments in which a game (or two or
     >three) take place. For instance, in WoW, you could grind up your levels
     >and do raids for uber-loot (that's one game), battle in the PvP areas
     >(a second game), or just sit around and tell stories around the
     >campfire (not a game at all).
    
    I think this is definately a better view - you are not producing one 
    "game", but a collection linked by a common theme. Perhaps this is why 
    Puzzle Pirates works so well?
  - |
    From: Sean Howard <squidi@squidi.net>
    Date: Wed, 21 Nov 2007 14:48:27 GMT
    Subject: [MUD-Dev2] Player Choice - How Much is Too Much?
    In-Reply-To: <4742D87E.7020701@casual-tempest.net>
    References: <4742D87E.7020701@casual-tempest.net>
    Message-ID: <62178.68.46.237.81.1195586451.squirrel@www.squidi.net>
    
    "cruise" <cruise@casual-tempest.net> wrote:
    > Since everyone's run out of things to say, I figured I might as well
    > start another argument :P
    
    I'll throw in my two cents so that there is sure to be long thread of
    arguments to follow :)
    
    > It's been stated several times by various people that a game designer
    > shouldn't tell players how to play the game. That players should have
    > the choice to play like they want to.
    
    Players cannot play a game the way that they like. As per your own
    examples, the second you break fundamental rules, you aren't playing that
    game anymore. There are, of course, secondary, almost optional rules that
    you can break, but don't break the backbone of the game.
    
    That's why I think we should stop thinking of MMOGs as games. What they
    really seem to be are shared environments in which a game (or two or
    three) take place. For instance, in WoW, you could grind up your levels
    and do raids for uber-loot (that's one game), battle in the PvP areas (a
    second game), or just sit around and tell stories around the campfire (not
    a game at all).
    
    Probably the greatest problem facing MMOG designers today is how to
    connect the games they want to be played with the community and the ways
    they want to experience the shared community. My classic example is that a
    solo player may just want to play the game, but forcing them to group to
    play puts them into social situations they might find offensive,
    uncomfortable, or just plain boring. Likewise, social players might want
    to solve problems together in their clique (be it group, family, guild, or
    immediate zone), and even if the game is largely single player, they'll
    still communicate solutions, hints, tips, and exploits to each other
    outside of the game parts.
    
    > Players do not know what will be fun. That's why game-design is hard.
    
    Game design is easy. Have you ever seen some of the successful game
    designers in the game industry? Some of them can barely string two words
    together. Community design (and control) is hard.
    
    Controlling a community is literally a problem as old as life itself.
    We've never figured out how to do it well. We've found ways to make it
    easier on those in power (totalitarian control, like most MMORPGs employ)
    or allow those in the community to have a minor effect on their destiny
    (democracy, republics). But finding that perfect medium where everybody is
    happy is impossible. So the trick is to find the right form of community
    control for the game you are building and the game you want people to
    play. More often than not, totalitarian control is the absolute best
    choice here. You can play the game like you want (within the borders we
    set for you) and you can enjoy the community as you'd like (within the
    borders we set for you). Step outside those borders, and you get banished.
    Do something that makes us uncomfortable, banished. Bring shame to the
    community. Banished. Almost all solutions are exile and very rarely is the
    community rewarded or otherwise have their life improved by "proper"
    behavior.
    
    -- 
    Sean Howard
  - |
    From: Lachek Butalek <lachek@gmail.com>
    Date: Tue, 27 Nov 2007 18:25:22 GMT
    Subject: [MUD-Dev2] Player Choice - How Much is Too Much?
    In-Reply-To: <4742D87E.7020701@casual-tempest.net>
    References: <4742D87E.7020701@casual-tempest.net>
    Message-ID: <71901cb10711211056h36a1b319naf4e8c616c84558e@mail.gmail.com>
    
    On Nov 20, 2007 7:52 AM, cruise <cruise@casual-tempest.net> wrote:
    > Now, I'm big on player choice - to me it's one of the fundamentals that
    > makes a game not a movie. Saying that, I'm not sure I can truly agree
    > that a game designer can't tell players how to play the game.
    
    Johnicholas Hines wrote:
    > There is something called "The Magician's Choice".
    > This is when the magician seems to offer an audience member a choice,
    > but phrases the offer in such a way that the magician actually forces
    > the choice in a certain direction.
    ...
    > Games can be linear, while still offering pleasure in a different way
    > than a movie.
    
    In the tabletop RPG world, what is referred to here is a firmly
    established mode of game moderation called "illusionism". If
    railroading is the act of forcing players into specific situations,
    illusionism is the act of doing so while attempting to avoid player
    knowledge of their predicament. It is used for two possible reasons:
    
    1. The game moderator is lazy and/or unable to think on hir feet in
    response to player actions, or
    2. The game moderator believes that the story zie has written will be
    more entertaining to the players than anything the players can come up
    with on their own.
    
    If "found out", an illusionist mode of play usually result in far more
    player resentment than an openly railroading mode of play - players
    feel cheated when they realize the choice they perceived they had was
    not real. Even if players never catch on explicitly, such games rarely
    entertain unless the players have a large amount of buy-in into the
    game moderator's marvelously crafted storyline.
    
    For MMORPGs, the reasons such a technique may be used translate to:
    
    1. The game is technically unable to adjust to player actions, or
    2. The developers believe that the story they have written will be
    more entertaining to the players than anything the players can come up
    with on their own (identical to the tabletop variety).
    
    For #2, I think I can safely claim that no MMORPG has actually
    achieved this, although nearly all of them believe they have. Sure,
    there are (some) people who read the quest flavour text in WoW before
    venturing forth to bravely kill ten ocelots, but outside of easily
    amused fiction-starved early teen kids I can't imagine anyone
    excitedly recount their adventures slaying the giant fire demon of
    Oxz-Gagon from point of view of the game lore, as opposed to in
    meta-game terms. On the other side, many people have awesome stories
    to tell about how they once had a guild Moot in the middle of hostile
    territory, or how they entered the Wetlands by jumping down a series
    of hazardous cliff-side precipices. Simply, the stories players make
    on their own are far more entertaining and sticky than the storyline
    built into the game mythos.
    
    #1 is far more forgivable. A game that attempts to offer a lot of
    player activities and freedom often find themselves in situations
    where the game engine cannot adjust to unpredictable circumstances. As
    an example, look at the economy in EVE Online. In wild 0.0 space, you
    will find all manner of odd market situations, like ridiculously high
    prices on simple shuttlecraft or an complete absence of a particular
    type of common ammunition. Within Empire space, however, the markets
    are tightly regulated. Supply and demand resets each day and
    stockpiles refill regardless of player intervention. This is most
    certainly an invisible wall in the supposedly player-driven EVE
    economy.
    
    But if Empire economy didn't reset, the repercussions would ripple
    throughout the EVE universe. The immediate effect would be that
    newbies would be unable to engage in standard EVE activities of
    manufacturing and trading. The long-term effect would be that certain
    major alliances would start to dominate completely, with little to no
    chance of retaliation. The gameplay of EVE would suffer - and worse,
    it would suffer in a thoroughly unpredictable manner, in uncertain
    ways at an uncertain timeline.
    
    I think that designers can and must inform their players of the game
    modes their game is built to deliver. It doesn't have to be by
    explicit statement - in fact, the best games are those where the
    "correct" mode of play naturally emerges from engaging with it. The
    Alterac Valley is a good example of an incorrect way to inform -
    Blizzard presents it overtly as a new mode of WoW gameplay focusing on
    tactical combat and teamwork, but attaches a reward system which
    informs the players that it is actually just a new currency to grind.
    The gameplay which emerges is one of super-efficient farming rather
    than tense tactical teamwork - objectively less entertaining than the
    mode of play presented overtly. What would happen if Blizzard simply
    removed the Honor reward entirely from the Alterac Valley
    battleground? I imagine that those who chose to engage in that mode of
    play would now be there voluntarily to engage in the form of play
    initially presented by Blizzard - which, obviously, is entirely
    possible to engage in within that space.
    
    But linearity in an MMORPG, I believe, is missing the point entirely.
    The advantage of an MMORPG over a single-player RPG (other than a
    $15/month/subscriber cheque </sarcasm>) is that with other players
    present, one can more easily forge personal stories within the game
    environment due to the infinite number of variables a human element
    offers. Elder Scrolls can only give you so much randomness within the
    scope of its game code, but the presence of other players interacting
    with the environment in dynamic, sticky ways provide a potentially
    endless source of entertainment. When designers figure this out,
    instead of offering fake choices and (warning: convergent analogies
    ahead) herding players through their rollercoaster museum, maybe we
    can get *real* entertainment from mainstream MMORPGs.
  - |
    From: Lachek Butalek <lachek@gmail.com>
    Date: Tue, 27 Nov 2007 18:25:22 GMT
    Subject: [MUD-Dev2] Player Choice - How Much is Too Much?
    In-Reply-To: <4742D87E.7020701@casual-tempest.net>
    References: <4742D87E.7020701@casual-tempest.net>
    Message-ID: <71901cb10711211241q19e7d3b3qf04c6fd76104dfd9@mail.gmail.com>
    
    On Nov 20, 2007 7:52 AM, cruise <cruise@casual-tempest.net> wrote:
    > It's been stated several times by various people that a game designer
    > shouldn't tell players how to play the game. That players should have
    > the choice to play like they want to.
    ...
    > Players do not know what will be fun. That's why game-design is hard. A
    > good game designer /does/ know better than the players what they will
    > enjoy - if he didn't he wouldn't be a good game designer.
    
    And once again, I'm reminded of tabletop RPGs, where the same argument
    has been raised repeatedly with little to no consensus within the
    hobby.
    
    Should a set of game rules only simulate reality, letting the
    individuals who play it (mostly the game moderator) infer whatever
    meaning they wish within the game constraints? (GURPS)
    Or should a set of game rules hint at the fun factor by strongly
    emphasizing a particular piece of the game, thereby leading the
    players towards engaging mostly in that activity? (D&D / d20, Spirit
    of the Century, etc)
    
    In reality, the lines aren't that distinct. Many tabletop gamers use
    d20 rules to simulate reality and hardly ever use the rules the game
    was built around, which (arguably) is miniature combat. In my humble
    opinion, this often leads to the "Alterac Valley" problem, where the
    reward system imposed by the rules of the games clash with the
    gameplay attempted by the participants.
    
    Sean Howard wrote:
    > That's why I think we should stop thinking of MMOGs as games. What they
    > really seem to be are shared environments in which a game (or two or
    > three) take place. For instance, in WoW, you could grind up your levels
    > and do raids for uber-loot (that's one game), battle in the PvP areas (a
    > second game), or just sit around and tell stories around the campfire (not
    > a game at all).
    
    This is the GURPS stance, and one which (like tabletop RPGs) many
    MMO's claim to do. "Be anything, do anything!" is the prevalent
    marketing line. Well, there is but one MMO I'm aware of that lets you
    do this, and that is Second Life. The thing with Second Life, if
    you're not really into graphical chat clients, there's not a lot there
    - like Sean says, it's not a game. It's up to you to infer meaning,
    and your own concept of what you're doing there is more than likely to
    clash with someone else's before long.
    
    On the other hand, a game which strongly hints at an underlying
    premise is likely to have less pitfalls of this kind. By its nature,
    it's not as flexible and might not attract as many initial
    subscribers. On the other hand, those subscribers that do join are
    likely to be the target audience for the game, and won't engage in
    activities that clash with other subscribers' ideas of what the game
    is about.
    
    As a simple example, take the (tabletop) game "Sorcerer". Sorcerer has
    a very explicit premise. You cannot be anyone doing anything; you are
    a sorcerer, and you engage in the summoning of demons. In emergent
    play, the game is about your relationships with those demons, what
    engaging with demons does to you, and how far you are willing to go in
    your quest for power. For this reason, the game strongly de-emphasizes
    your character's own abilities, choosing instead to focus on the
    intricacies of demonic summoning, the strength of demonic bonds, the
    lengths demons will go to to get their ways, the powers demons might
    infer onto their summoner, and so on.
    
    Nobody who knows the game will approach it thinking "Cool, I'm going
    to totally summon all the demons I can, get awesome super-powers and
    get everyone to worship me!" - or if they do, they will most
    definitely change their mind after playing a session or two. Instead,
    one would approach it as "Cool, I'm going to totally summon all the
    demons I can, get in a lot of trouble with controlling them all, and
    then have to clean up the mess - and how do I do that without
    summoning more of them?". One approaches a game of Sorcerer *knowing*
    the game is about getting in, or staying out of, trouble - not about
    pumping your stats to the max and boasting to your friends.
    
    Similarly, WoW implicitly states "You get to be a hero! Nothing you do
    within the scope of this game is crippling - the only way is up! The
    point of the game is to get more powerful than everyone else, and show
    it off!"
    CoX states "The point of the game is to get an avatar that looks
    really, really awesome! As you get more powerful, we give you more
    costumes and cooler looking flashy powers!"
    EVE Online states "The point of the game is to get rich beyond your
    wildest dreams, and use your riches to make your organization win!"
    
    The crux: the moment you try to add multiple premises to a game, you
    muddle the idea of what the game is about. This causes friction within
    the community, which now have differing goals within the game. You can
    choose to collect and wear cool-looking armour in WoW, but the game
    system punishes you for your choice - a mismatched set with less
    inspiring textures may provide better stats. You can explore
    tremendous vistas in WoW, but if you venture out beyond your abilities
    you're likely to get eaten by the first mob that shows up. You can
    assault and kill off all guards and quest givers in hostile towns in
    WoW, but the server resets the state, so there is little to no payoff
    beyond boasting rights. You can go to Alterac Valley and battle random
    hostiles for Honor, but because the reward system is broken you may as
    well lose - as long as you do it quickly.
    
    In tabletop RPGs, a game moderator is always present and only have to
    deal with 2-8 other players. A skilled moderator can make a GURPS-like
    system work for them and get everyone on the same page with regards to
    the premise of the game.
    
    MMORPGs are 99% auto-moderated by the system itself. As such, an MMO
    that offers a plethora of premises to tens of thousands of
    simultaneous players runs into a vast array of community management
    problems, where players looking for vastly different forms of gameplay
    from the same base set of rules gripe about why the game isn't more
    like *this* or *that*. No wonder solo play has been so successful in
    modern mass-market MMORPGs, whereas those games that feature clearly
    defined premises have far tighter communities, easier grouping, and
    relaxed and polite conversation on boards and in-game chat.
    
    So for my 2c, if it wasn't obvious - I'm looking forward to seeing a
    plethora of MMOs with smaller subscriber bases and tighter, better
    defined game play. Anything less, when you're dealing with a largely
    computer moderated community of people, is simply too much to bite off
    for anyone but the biggest players, and I pity those community
    managers.
  - |
    From: Amanda Walker <amanda@alfar.com>
    Date: Tue, 27 Nov 2007 18:19:44 GMT
    Subject: [MUD-Dev2] Player Choice - How Much is Too Much?
    In-Reply-To: <205241.79781.qm@web86103.mail.ird.yahoo.com>
    References: <205241.79781.qm@web86103.mail.ird.yahoo.com>
    Message-ID: <8F6A8561-3710-43FA-AF45-546838E8B256@alfar.com>
    
    On Nov 20, 2007, at 1:42 PM, Christopher Lloyd wrote:
    > I know players who have spent days trying to cross that magical  
    > barrier
    > or deep chasm (and, having given up and moved on, still come back to
    > look at it and think).
    
    Indeed.  One of my fun sidelines in WoW during the beta period was  
    wall climbing--I have screenshots of my avatar in all sorts of  
    unlikely places.  Examples:
    
    http://www.alfar.com/~amanda/stormwind1.jpg
    http://www.alfar.com/~amanda/stormwind1.jpg
    
    Playing the "geometry game" is much more interesting to me than 40- 
    person raids, frankly :-).
    
    --Amanda
    (explorer + socializer, at your service...)
  - |
    From: John Buehler <johnbue@msn.com>
    Date: Tue, 27 Nov 2007 18:25:23 GMT
    Subject: [MUD-Dev2] Player Choice - How Much is Too Much?
    In-Reply-To: <1195656163.24637.1222558147@webmail.messagingengine.com>
    References: <1195656163.24637.1222558147@webmail.messagingengine.com>
    Message-ID: <BAYC1-PASMTP10A36482B30912202566DBB4780@CEZ.ICE>
    
    James writes:
    
    > I guess my question is- how do you design an open and objective based pvp
    > game, and encourage players into the proper group helping behaviours they
    > should be doing? These are ALREADY the optimal behaviours in terms of
    > honor/hour but that doesn't seem to be enough. I've often thought that it
    > needs a Battlefield 2 style 'commander' role that can actually mark the
    map
    > and 'officially' direct groups of players- it certainly works quite well
    in
    > that game, but then maybe it's a completely different mindset.
    
    Perhaps because I am so keen on the phenomenon, I point the finger at mixing
    of player groups.  World of Warcraft only has one PvP game for levels 51-60
    and 61-70, correct?  Anyone who is motivated to PvP for any reason goes to
    Alterac Valley at those levels.  But those players have a variety of goals.
    
    Unreal Tournament addressed this very intelligently by creating multiple PvP
    games.  There is free-for-all PvP, team PvP, and the team goal-directed PvP
    called Onslaught (my favorite) - plus others that don't come to mind.
    Players interested in each type of PvP have an outlet, helping to ensure
    that everyone in any given style of game is there to experience that style
    of game.
    
    I use the phrase "let like-minded players play together".  Not a catchy
    statement, but the point is that games need to create not only their own
    favorite form of entertainment, but also as many variations as they can
    technically handle - and then let like-minded players get together to play
    those variations.  I believe that Raph Koster's Metaverse project will
    address some of this.  The result may well be so many variations on
    multiplayer games that you'll be able to find a game that has the
    entertainment that you like.  Today, we have lots and lots of people
    converging on a few forms of entertainment, trying to get *their* preferred
    entertainment out of it.
    
    I use the example of the guy dancing naked in the middle of the street while
    a bunch of roleplayers walk past, discussing the need for mobilization of
    their mining conglomerate.  The two may well be incompatible, but they have
    to coexist because there's one standard game mechanic that happens to
    support both styles of play.  In PvP, the players interested in the
    entertainment of getting into fights or of ganking any available victims are
    looking for an experience that is different from the team-goal-oriented
    players.  In Alterac Valley, they have to play in the same space.
    
    JB
  - |
    From: John Buehler <johnbue@msn.com>
    Date: Wed, 21 Nov 2007 14:50:38 GMT
    Subject: [MUD-Dev2] Player Choice - How Much is Too Much?
    In-Reply-To: <4742D87E.7020701@casual-tempest.net>
    References: <4742D87E.7020701@casual-tempest.net>
    Message-ID: <BAYC1-PASMTP13CAB918E1655F763BA0A7B47F0@CEZ.ICE>
    
    Cruise writes:
    
    > While taking away all the player's choice means it's no longer a game,
    > limiting them to a certain degree is pretty much the point of making
    > game rules. We should and, I'd say, must, tell the players how to play
    > the game.
    
    The only argument you'll get from me on that is the potential for
    misinterpreting 'tell'.  I doubt you're after a "do this" and "do that"
    mindset.  I would guess that a notion of 'inviting' is actually more
    appropriate than 'telling'.  Perhaps 'tempting', even.  For the achievers:
    'daring'.
    
    > Looking at the world around us it becomes patently obvious that people
    > don't make choices that will be best for them.
    
    Don't get me started.
    
    > The important caveat, of course, is that players hate to feel like
    > their choices are being deliberately limited - the old "invisible wall"
    > at the edge of a game area, for example, when a chasm would achieve the
    > same effect but not feel forced. I suspect this is what most people
    > object to - not the removal of choices, but the obviousness with which
    > they are removed (such as a "nerf" in MMOG's - having the previous
    > performance to compare to, any such limitation will be obvious).
    
    I'm reminded of a bit of wisdom dropped on this list years ago that
    designers should never give anything to players that they are going to take
    away.  That is perhaps the easiest way to get players thinking that a
    certain thing would be fun to do that's not actually in the game.  Giving it
    to a player tell him that it is fun.  Taking it away means that the player
    now *knows* that it was fun and they can no longer reach it.
    
    The invisible wall is the same deal.  If player expectations are guided into
    the belief that characters can go everywhere and do everything that the
    player sees, then when the character hits an invisible wall, the player will
    feel that some entertainment that could have been obtained on the other side
    of the wall is unavailable.  They got their hopes up and the designer dashed
    them.
    
    So I would claim that it's not an issue of removal so much as an overall
    pattern of designers walking players into dead ends in the structure of
    their entertainment.  Imagine if there was a den of progressively more
    difficult monsters, and a group is fighting their way to the climax of the
    encounter when they enter a cavernous room and...
    
    They find a couple of standard NPC merchants.
    
    JB
  - |
    From: Johnicholas Hines <johnicholas.hines@gmail.com>
    Date: Wed, 21 Nov 2007 14:50:10 GMT
    Subject: [MUD-Dev2] Player Choice - How Much is Too Much?
    In-Reply-To: <4742D87E.7020701@casual-tempest.net>
    References: <4742D87E.7020701@casual-tempest.net>
    Message-ID: <d092c2300711201203m7b5fecceh9a6c52feae9e0bc4@mail.gmail.com>
    
    In reply to cruise's post regarding player choice:
    
    There is something called "The Magician's Choice".
    This is when the magician seems to offer an audience member a choice,
    but phrases the offer in such a way that the magician actually forces
    the choice in a certain direction.
    
    For example:
    1. The magician asks the audience member to choose one of two cards.
    2.1. If the audience member chooses the left card, the magician chops
    it in half and hands the right card to the audience member.
    2.2. If the audience member chooses the right card, the magician hands
    the right card to the audience member and chops the left card in half.
    
    Malcolm Gladwell (quoting Ian Rowling) gives a similar example,
    regarding the art of cold reading.
    1. The cold reader says "you don't work with children, do you?"
    2.1. The audience member says "No, I don't." The cold reader goes on
    "No, I thought not."
    2.2. The audience member says "Actually, I do." The cold reader goes
    on "Yes, I thought so."
    
    The point that I'm trying to make is that making a choice is a
    sensation; a sensation that movies do not offer.
    
    Games can be linear, while still offering pleasure in a different way
    than a movie.
    
    Johnicholas
'2007-12':
  - |
    From: cruise <cruise@casual-tempest.net>
    Date: Sat, 01 Dec 2007 05:49:26 GMT
    Subject: [MUD-Dev2] Player Choice - How Much is Too Much?
    In-Reply-To: <1196188048.22546.1223520349@webmail.messagingengine.com>
    References: <1196188048.22546.1223520349@webmail.messagingengine.com>
    Message-ID: <474EA60E.2090806@casual-tempest.net>
    
    Thus spake Miroslav Silovic...
    > I think cruise here overstated his argument, because in my opinion, 
    > certain game design decisions simply don't matter.
    
    No argument there - I was expecting a little more resistance :P 
    Certainly you don't want to over-regulate everything.
    
    > So I'd say that certain -parts- of the game 
    > design are hard, and the designers should try to identify those and 
    > retain control. For everything else, listening to the players is the 
    > obvious thing to do.
    
    This is the challenge - walking that fine line.
    
    The player created stories are the ones they feel emotionally attached 
    to, and so will always be far more rewarding and involving than any you 
    can script. Your game needs to offer a framework in which the players 
    can create their own stories.
    
    But, and this is the trick, to be really enjoyable, they still have to 
    good stories. "I completely dominated those 10 giant rats!" really won't 
    cut it. "I totally pwned that n00b" is equally banal.
    
    The current games positively encourage taking the easiest route, rather 
    than facing difficult challenges which provide narrow victories (or even 
    losses) - people's natural inclination is opposite to that which is 
    generally the most fulfilling, and the grind simply re-inforces that.
    
    The context and type of that challenge will vary from person to person, 
    as John Buehler and Lachek Butalek eloquently explained - either better 
    division within games, or smaller, more focused games. But within any of 
    them, the player needs to be guided as invisibly as possible away from 
    the low-hanging fruit.
  - |+
    From: John Buehler <johnbue@msn.com>
    Date: Sat, 01 Dec 2007 05:47:11 GMT
    Subject: [MUD-Dev2] Player Choice - How Much is Too Much?
    In-Reply-To: <71901cb10711211241q19e7d3b3qf04c6fd76104dfd9@mail.gmail.com>
    References: <4742D87E.7020701@casual-tempest.net>
          <71901cb10711211241q19e7d3b3qf04c6fd76104dfd9@mail.gmail.com>
    Message-ID: <BAYC1-PASMTP0564E86E8C3B9FF71D136FB4770@CEZ.ICE>
    
    Lachek Butalek writes:
    
    > The crux: the moment you try to add multiple premises to a game, you
    > muddle the idea of what the game is about. This causes friction within
    > the community, which now have differing goals within the game.
    
    I completely agree, but there is an element of the gaming community that
    believes quite strongly that the very friction that we implicitly declare as
    undesirable is a good and necessary thing.  They enjoy the times when
    agendas conflict.  From what I recall of Nick Yee's research, players who
    really enjoy PvP constitute perhaps a quarter of the MMO player population.
    And I don't think they care if the character that they're acting against is
    a PvP enthusiast or not.
    
    > So for my 2c, if it wasn't obvious - I'm looking forward to seeing a
    > plethora of MMOs with smaller subscriber bases and tighter, better
    > defined game play. Anything less, when you're dealing with a largely
    > computer moderated community of people, is simply too much to bite off
    > for anyone but the biggest players, and I pity those community
    > managers.
    
    I look forward to a proper partitioning of game experiences.  It may be that
    a large number of small MMOs is the way to go, but I hold out hope that an
    MMO can become like a theme park, with many activities available that
    clearly communicate the entertainment that a player will find in them.
    
    I wonder how much of the difficulty is the graphics.  The graphics display
    the MMO environment as a virtual world.  There are animals walking around
    the forests, there are lamp posts, lights in the windows, birds singing and
    so on.  What player wouldn't assume that they could do anything?  And then
    there's the attempt to create dynamics of interaction between various
    systems such as crafting, socializing and killing.  That interdependence
    actively brings together conflicting agendas.
    
    JB
  - |
    From: John Buehler <johnbue@msn.com>
    Date: Sat, 01 Dec 2007 05:47:12 GMT
    Subject: [MUD-Dev2] Player Choice - How Much is Too Much?
    In-Reply-To: <474ABF99.3010607@casual-tempest.net>
    References: <4742D87E.7020701@casual-tempest.net>	<BAYC1-PASMTP13CAB918E1655F763BA0A7B47F0@CEZ.ICE>
          <474ABF99.3010607@casual-tempest.net>
    Message-ID: <BAYC1-PASMTP14295C87CFA7B12CC8A613B4770@CEZ.ICE>
    
    Cruise writes:
    
    > Perhaps the better question, since there appears to be a simple answer
    > to my original one, is how do we prevent players from figuring out that
    > their choices are being restricted when guiding them?
    > 
    > Using James' example - how do you make some players stay and defend an
    > objective, without explicitly immob'ing a random % of the playerbase?
    > To me it seems quite a simple behavioural training problem.
    
    Yes, except that the one that needs to be trained is the designer.
    
    The thing that designers need to understand is that if they present their
    entertainment properly, it will attract players who want that entertainment.
    As I mentioned in another post, if all players interested in PvP have
    exactly one bit of entertainment to turn to, they will use it to their best
    ability to get what they want out of it.  A game that promises everything to
    everyone will get a wide distribution of players, with a wide set of
    agendas.  Whatever they want to do, they will pursue to the best of the
    game's abilities.  Designers look at the results and begin to ponder how
    they can take a mishmash player base and bend their wills to the goals that
    they had in the first place.
    
    Create an experience in your game that players can look at, understand the
    source of the entertainment and then choose to play or not.  Don't try to
    change your players.
     
    > Okay, one quote:
    > Thus spake Sean Howard:
    >  >That's why I think we should stop thinking of MMOGs as games. What
    > they
    >  >really seem to be are shared environments in which a game (or two or
    >  >three) take place. For instance, in WoW, you could grind up your
    > levels
    >  >and do raids for uber-loot (that's one game), battle in the PvP areas
    >  >(a second game), or just sit around and tell stories around the
    >  >campfire (not a game at all).
    > 
    > I think this is definately a better view - you are not producing one
    > "game", but a collection linked by a common theme. Perhaps this is why
    > Puzzle Pirates works so well?
    
    I believe that MMOs are best suited to being a collection of loosely-related
    games.  If I were building an MMO, I'd build a theme park MMO where the
    games are not related at all.  As I built experience with that, I'd start to
    see how I could relate them in some way.
    
    JB
  - |
    From: Amanda Walker <amanda@alfar.com>
    Date: Sat, 01 Dec 2007 05:45:43 GMT
    Subject: [MUD-Dev2] Player Choice - How Much is Too Much?
    In-Reply-To: <1196188048.22546.1223520349@webmail.messagingengine.com>
    References: <1196188048.22546.1223520349@webmail.messagingengine.com>
    Message-ID: <EDACBACB-B8FD-47DB-A608-D36852B7DDA6@alfar.com>
    
    On Nov 27, 2007, at 1:27 PM, Miroslav Silovic wrote:
    > Actually Guild Wars does exactly this. Well, they do it as a weeklong
    > event, with cities redecorated extra-dark, and the arrival of the Mad
    > King that forces players to do things (and insta-kills those that  
    > fails,
    > with a resurrect a few seconds later). And pumpkins, and witch-hats,
    > and  holiday drinks.
    >
    > And it works for Guild Wars. Holiday events became something that
    > players like and expect. They also have in-game lore that translates
    > real-life events into the game-world equivalents (Halloween ->  
    > Return of
    > the Mad King, New Year -> Wintersday, Chinese New Year -> Canthan New
    > Year).
    
    Indeed, and those events are quite fun (I was a bit annoyed to get a  
    mummy mask instead of a witch hat this year, but that's how the cookie  
    crumbles).
    
    However, and this is very, very important: Guild Wars has a story arc  
    as a sideline.  A good one, and a fun one (I'm still not all the way  
    through it), but NCsoft understands, accepts, and supports the fact  
    that the main draw is the PvP metagame (and not just for cash prizes,  
    though I suspect that helps).  The holiday events, the occasional  
    weekend mini-events, and so on work precisely because immersion is not  
    the main point of the game (though it can be quite immersive).
    
    And boy howdy is GW fun to play.
    
    --Amanda
'2008-01':
  - |
    From: Miroslav Silovic <miroslav.silovic@avl.com>
    Date: Mon, 21 Jan 2008 17:52:37 GMT
    Subject: [MUD-Dev2] Player Choice - How Much is Too Much?
    Message-ID: <1200937927.443.1232441719@webmail.messagingengine.com>
    
    Christopher Lloyd wrote:
    > I do like this approach. If you're going to be spammed with players
    > wishing each other Happy Halloweeen, then it's not a bad idea to listen
    > to what they're interested in and meet (surpass?) their wishes.
    >
    > Then there are other more in-game events. Discworld MUD has a (roughly)
    > annual Witching Trial, where players compete to appear to be the best
    > witch (a game of psychology rather than anything else).
    >
    > Whilst I haven't played Guild Wars, I do appreciate a game with a
    > proper plot. Does anyone happen to know the ratio of competitive team
    > players vs co-operative team players? I'd be interested in knowing. As
    > I understand it, playing co-operatively is akin to playing a
    > single-player game, with several players (c.f. Baldur's Gate).
    >  
    
    ArenaNet doesn't publish the statistics, but forum polls suggest
    relatively even split among the forum readers. However, this is heavily
    biased, as competitive gameplay used to be the main endgame for Guild
    Wars, so it's played by more experienced players, and those are much
    more likely to visit and vote on the forums. Also, there is a
    significant overlap between the communities, due to the existence of a
    VERY casual-friendly PvP mode (namely, Alliance Battles).
    
    I tend to use Baldur's Gate for comparison when people ask me what Guild
    Wars is like, actually. You run 1 main character but can take a number
    of NPCs which you can also partially control. AI is surprisingly
    competent if you don't feel like doing any micromanagement, and this
    makes the game mostly soloable - but Hard Mode is way more difficult to
    play this way, as Hard Mode monster AI also becomes surprisingly
    competent in wiping your party. Obviously, you can also play with full
    human parties. Also, duo mode is quite popular among friends - 2 humans,
    with 3 NPCs each (I've seen some family groups playing this way,
    including husband/wife and even father/son).
    
    > How important is background plot to players? One interesting
    > side-effect of worlds with smaller player bases (MUDs generally) is the
    > chance to get your own name in the history books. Unlike WoW, The
    > Matrix Online and Guild Wars, if the player base is only ~10,000, and
    > the number of truly active, involved players is ~500, there's actually
    > a very good chance that you'll be able to take part (or even lead) a
    > portion of the world's plotline. Even more so if you're a
    > guild/city/clan leader, or at the top of the ladder for your class.
    >  
    
    Since Guild Wars doesn't have level grind, the plot -is- the game.
    Except in the first campaign, you level up to 20 (max level) and max
    your gear as soon as you leave the tutorial area, and the entire
    non-tutorial game is max level, max gear progression through the
    storyline, with side quests. Grind is done for prestige items and
    titles. Both primary quests/missions and side quests tend to be
    surprisingly well written; for a game driven by the plot, this is a
    must. Quote from a developer:
    
    | The other dictum we carried with us into the development of GW:EN
    | was that quests should be varied and fun. We wanted to avoid 
    | designing any delivery (or ?fedex?) quests at all. In fact, we put
    | a sign on the door to the quest design area that said: ?Every time 
    | you make a fedex quest, Abaddon will feast on puppy eyes.? We want
    | the quests in Eye  of the North to present players with new goals,
    | new challenges, and new ways to play | the game.
    
    Note that GW:EN is the last release of Guild Wars (they're now doing
    Guild Wars 2), and note that the quests in the older Guild Wars aren't
    far from this standard, either; they (usually) tend to have multiple
    stages and variety of goals to complete.
    
    On the downside, most players don't even try to roleplay, which is
    actually not to far from how single-player Baldur's Gate is played.
    Still, there is a small, tight community of game lore collectors and
    roleplaying guilds. There were a small number of player-ran events, and
    ArenaNet provided coding support for some of them (each time this was a
    welcome surprise to the community). Also, a number of NPCs were named
    after active posters on the Lore forums. So I'd say that GW falls
    halfway between a grind MMORPG and a MUD in this respect, for the people
    who choose to RP.
    
    The main weakness of GW is the endgame. After getting through the plots
    and quests of all the chapters, you have a very definite What Now?
    moment. PvP is the obvious answer. Originally, the plan was to also push
    out a new campaign every 6-9 months, but that didn't quite work as
    planned (hence, move to Guild Wars 2) - the important (but not the only)
    stumbling point was that they decided to add new classes and a bunch of
    new skills for each campaign; this caused HUGE issues for the PvP
    balance, as it takes longer than 6 months to balance all the new stuff
    that the -previous- chapter introduced. Since balanced PvP that demands
    HUGE level of strategy and skill was one of the stated goals of GW, Anet
    seems to be searching for the new model of expanding the content and
    selling chapters.
    
    Other endgame options, such as Hard Mode and prestige title grind do
    exist, but they were added over time and are not really the part of the
    original game. Still, they seem to keep most of the playerbase
    interested enough to wait out GW1-GW2 gap; even though they were
    originally added only to help people tide out chapter-to-chapter gap.
    
    Considering that one of the stated goals of GW design was to break as
    many cliches that Everquest set as canon as possible, I'd say that the
    above does set a new game design, with well-defined rules and
    principles; ArenaNet followed this design (mostly) successfully. But for
    now I'll refrain from trying to formalise the rules they set.
    
    Miro
  - |
    From: Christopher Lloyd <llocr@btinternet.com>
    Date: Thu, 03 Jan 2008 22:17:18 GMT
    Subject: [MUD-Dev2] Player Choice - How Much is Too Much?
    In-Reply-To: <1196188048.22546.1223520349@webmail.messagingengine.com>
    Message-ID: <138410.13955.qm@web86109.mail.ird.yahoo.com>
    
    
    --- Miroslav Silovic <miroslav.silovic@avl.com> wrote:
    > 
    > And it works for Guild Wars. Holiday events became something that 
    > players like and expect. They also have in-game lore that translates 
    > real-life events into the game-world equivalents (Halloween -> Return
    > of the Mad King, New Year -> Wintersday, Chinese New Year -> Canthan
    > New Year).
    >
    
    I do like this approach. If you're going to be spammed with players
    wishing each other Happy Halloweeen, then it's not a bad idea to listen
    to what they're interested in and meet (surpass?) their wishes. 
    
    Then there are other more in-game events. Discworld MUD has a (roughly)
    annual Witching Trial, where players compete to appear to be the best
    witch (a game of psychology rather than anything else).
    
    Whilst I haven't played Guild Wars, I do appreciate a game with a
    proper plot. Does anyone happen to know the ratio of competitive team
    players vs co-operative team players? I'd be interested in knowing. As
    I understand it, playing co-operatively is akin to playing a
    single-player game, with several players (c.f. Baldur's Gate).
    
    How important is background plot to players? One interesting
    side-effect of worlds with smaller player bases (MUDs generally) is the
    chance to get your own name in the history books. Unlike WoW, The
    Matrix Online and Guild Wars, if the player base is only ~10,000, and
    the number of truly active, involved players is ~500, there's actually
    a very good chance that you'll be able to take part (or even lead) a
    portion of the world's plotline. Even more so if you're a
    guild/city/clan leader, or at the top of the ladder for your class.
    
    C.
    
    
    
    -- 
    
    Christopher Lloyd
    
    Email: crl199@alumni.soton.ac.uk
    Tel:   +44 (0) 7718 542837
  - |
    From: Amanda Walker <amanda@alfar.com>
    Date: Thu, 24 Jan 2008 22:52:44 GMT
    Subject: [MUD-Dev2] Player Choice - How Much is Too Much?
    In-Reply-To: <1200937927.443.1232441719@webmail.messagingengine.com>
    References: <1200937927.443.1232441719@webmail.messagingengine.com>
    Message-ID: <2E058EFA-035A-43B3-AA38-CC3D2DD20F2D@alfar.com>
    
    On Jan 21, 2008, at 12:52 PM, Miroslav Silovic wrote:
    > On the downside, most players don't even try to roleplay, which is
    > actually not to far from how single-player Baldur's Gate is played.
    > Still, there is a small, tight community of game lore collectors and
    > roleplaying guilds. There were a small number of player-ran events,  
    > and
    > ArenaNet provided coding support for some of them (each time this  
    > was a
    > welcome surprise to the community). Also, a number of NPCs were named
    > after active posters on the Lore forums. So I'd say that GW falls
    > halfway between a grind MMORPG and a MUD in this respect, for the  
    > people
    > who choose to RP.
    
    The back story is deeper than I expected going into it, but yeah, RP  
    (that is, playing in persona) is almost non-existent.
    
    My personal theory about this ("I have a theory, and it is mine") is  
    that as the VR aspects get more immersive, the incentive for RP  
    drops.  You no longer have to paint pictures in your mind's eye from  
    the DM's description or a paragraph of text--it's all just there.
    
    I've noticed this in real-life RP as well.  I'm a long-time SCA  
    member, but the level of realism I experience today is much greater  
    than it was 25 years ago.  Today, if I sit down with a piece of  
    parchment, a goose quill cut into a pen, and grind up some ink, I'm  
    not "re-enacting", I'm just doing calligraphy.  When a friend of mine  
    builds a tatara and smelts iron sand into steel ingots and then forges  
    tools and knives out of it, he's not "role playing" blacksmithing,  
    he's just blacksmithing.
    
    Similarly, modern games have gotten immersive enough that RP isn't  
    really required--you just play (note how "immersivity" has dropped  
    steadily as a topic on Mud-Dev over the years...).  Whether this is a  
    success or a failure is, of course, open to debate.
    
    --Amanda
  - |
    From: cruise <cruise@casual-tempest.net>
    Date: Mon, 21 Jan 2008 17:48:04 GMT
    Subject: [MUD-Dev2] The Illusion of World Size (Was: Player Choice - How
          Much	is Too Much?)
    In-Reply-To: <999432.74647.qm@web86104.mail.ird.yahoo.com>
    References: <999432.74647.qm@web86104.mail.ird.yahoo.com>
    Message-ID: <477E4C48.7060500@casual-tempest.net>
    
    Thus spake Christopher Lloyd...
    > Right. And I bet there's a micro-community of players like yourself who
    > specialise in such activities. Who can find a way to stand on top of
    > Mount Hyjal first? Prove that it's possible to stand on top of
    > Blackrock Spire, etc.
    
    I've long enjoyed doing Parkour in-games as well as in real-life. It's 
    one of the major things that turned me off Guild Wars - not being able 
    to jump.
    
    <snip>
    
    > But like the construction of roads and motorways, if the capacity
    > exists, people will use it. Your new areas will become just as
    > populated as the rest of the world, partly by the casual players
    > exploring, but also by the more hardcore contingent working their way
    > through the grind. There are plenty of players who sign in, buff
    > themselves up, and automatically make their way to:
    > 
    > - Area A (where the easiest monsters with the best pHaT l3wT) to see if
    > anyone has raided it recently. If it has, in 60 seconds, they can be at
    > the edge of
    > - Area B (which may well be on the other side of the continent, but has
    > only marginally less l3wT than Area A). After that, it's
    > - Area C then
    > D.
    > - Area E if convenient, or then on to
    > - Area F. By that time, Area A has probably respawned, so stop by
    > - Area G on the way, and then grind through
    > - Area A and
    > - B again. 
    
    This isn't a problem with areas, but a problem with your level/loot 
    system. The way rewards are handled needs to change, which is a whole 
    'nother topic that has been round and around on this list many times :P
    
    > I know a couple of places that have experimented with methods of
    > deliberately restricting particular areas of the MMORPG, to make them
    > feel a bit more exclusive and deserted. Players like to know about
    > secret (profitable?) areas. They also like to make themselves look good
    > by -telling other players- about secret areas, and -showing them- the
    > secret areas. But, bizarrely, at the end of the day, they don't want
    > other players to -actually go there- because then it wouldn't be their
    > secret.
    > 
    > Setting aside restrictions that are put in place on certain areas for
    > "premium" paying customer-players, I thought I'd open up this topic for
    > discussion.
    
    Instancing + procedural generation is one solution. Generating the world 
    based on the player that activates the portal, owns the key, casts the 
    teleport spell, etc. means they get the same world each time (your 
    procedural generation is repeatable given the same input, right?), but 
    it's unique to them.
    
    If the game gave easy access to the history and accomplishments of a 
    player, then people don't have to "reveal" the secret location for 
    people to know they've been there. CoX's "badge system" includes 
    exploration badges for reaching a certain area - a similar system lets 
    others know you've fought your way to the undersea city through the 
    caverns of uber-doom-ness, without you having to tell them where the 
    secret entrance to the caverns actually is.
    
    Player housing is also an attempt, on a smaller scale, of this. Players 
    get to control and own their own, if small, part of the game world.
  - |
    From: Amanda Walker <amanda@alfar.com>
    Date: Mon, 21 Jan 2008 17:48:05 GMT
    Subject: [MUD-Dev2] Player Choice - How Much is Too Much?
    In-Reply-To: <138410.13955.qm@web86109.mail.ird.yahoo.com>
    References: <138410.13955.qm@web86109.mail.ird.yahoo.com>
    Message-ID: <76C0F9FF-E2C2-4C64-B7AF-97A3530AF38C@alfar.com>
    
    On Dec 21, 2007, at 8:11 AM, Christopher Lloyd wrote:
    > Whilst I haven't played Guild Wars, I do appreciate a game with a
    > proper plot. Does anyone happen to know the ratio of competitive team
    > players vs co-operative team players? I'd be interested in knowing. As
    > I understand it, playing co-operatively is akin to playing a
    > single-player game, with several players (c.f. Baldur's Gate).
    
    I don't know the ratio, but there appear (from a player's point of  
    view) to be two major communities, each of which is well supported by  
    the game:
    
    - Single-player or cooperative storyline RPG, punctuated with towns  
    where you can sell your ph4t l3wt and upgrade your gear.  There's also  
    explorer and achiever sidelines, where you can get special titles for  
    exploring every inch of the world or doing every quest (neither is  
    necessary to follow the storyline, and in fact for alternate  
    characters, once you know your way around the world, you can run  
    through abbreviated versions of the story arcs).   Once you complete  
    the arc, you can go back and do it in "hard mode", which brings much  
    of the alleged excitement of raids to the game ;-).
    
    One interesting aspect is that single-player play is not highly  
    penalized compared to grouping--it's quite possible to log in, pick a  
    set of "henchmen", and run a mission during your lunch hour.  It's  
    also possible to group with friends (and given the level cap, you all  
    end up at level 20 soon enough that there's no "level skew" to prevent  
    it--levels 1-20 are basically just a tutorial :-)).
    
    - Team based PvP: Either after doing the RP arc, or after simply  
    creating a max-level PvP-only character, you drop right into a variety  
    of squad-based PvP "twitchy" games, including a ranked ladder with  
    monetary prizes.  This amounts to RPG graphics with almost FPS style  
    gameplay--nonstop go-go-go CTF, tower defense, or just "most # of  
    kills" duels.
    
    There's some overlap between the two groups, in a couple ways:
    - The RPG story arc can unlock elite skills that can be used in PvP  
    (or you can just buy an unlock kit)
    - Good PvPers (or RPGers, for that matter) can make good in-game money  
    doing "runs" for people or groups through the harder RPG missions.  A  
    particular route through the map ("The Droknar Run") is very  
    profitable to people who can lead a run through it.
    
    However, someone who wants just straight squad PvP doesn't have to  
    deal with the RP side at all, and someone who just wants to experience  
    the story doesn't have to deal with PvP.  It works pretty well.
    
    > How important is background plot to players?
    
    Differs widely.  I like it a lot.  The world-building, graphics,  
    musical score, and RP story plots are actually quite good (much better  
    than WoW, though WoW is better for big raiding--GW maxes out at 8  
    players per team), and the rewards from the story quests don't involve  
    much grinding.
    
    > One interesting
    > side-effect of worlds with smaller player bases (MUDs generally) is  
    > the
    > chance to get your own name in the history books. Unlike WoW, The
    > Matrix Online and Guild Wars, if the player base is only ~10,000, and
    > the number of truly active, involved players is ~500, there's actually
    > a very good chance that you'll be able to take part (or even lead) a
    > portion of the world's plotline. Even more so if you're a
    > guild/city/clan leader, or at the top of the ladder for your class.
    
    In GW, fame isn't reflected in the storyline, but it *is* reflected in  
    the guild ladder, the monetary (and hardware) prizes, etc. Rather than  
    have people hijack the RP storyline, there's an explicit "sports  
    league" outlet for this, complete with seasons, the ability to watch  
    matches, wager on the outcomes, etc.
    
    --Amanda
  - |
    From: Christopher Lloyd <llocr@btinternet.com>
    Date: Thu, 03 Jan 2008 22:17:18 GMT
    Subject: [MUD-Dev2] The Illusion of World Size (Was: Player Choice - How Much
          is Too Much?)
    In-Reply-To: <8F6A8561-3710-43FA-AF45-546838E8B256@alfar.com>
    Message-ID: <999432.74647.qm@web86104.mail.ird.yahoo.com>
    
    --- Amanda Walker <amanda@alfar.com> wrote:
    > 
    > Indeed.  One of my fun sidelines in WoW during the beta period was  
    > wall climbing--I have screenshots of my avatar in all sorts of  
    > unlikely places.  Examples:
    
    > Playing the "geometry game" is much more interesting to me than 40- 
    > person raids, frankly :-).
    > 
    
    Right. And I bet there's a micro-community of players like yourself who
    specialise in such activities. Who can find a way to stand on top of
    Mount Hyjal first? Prove that it's possible to stand on top of
    Blackrock Spire, etc.
    
    A couple of years ago a player friend of mine made a comment about the
    world we were in at the time, "It's not as empty as it used to be". I
    didn't think that much of it at the time. One of the "games" that she
    enjoyed was going places where other people didn't. Unfortunately in
    any world that's been online for a while, the Super-Secret Dungeon of
    Bubba, hidden beneath the lake, will no longer be a secret, and there
    will be a well-worn path there by players who want to raid it and get
    the exclusive loot that the area offered.
    
    So we try to expand our MMORPG worlds as much as possible. Hire another
    builder/scriptwriter, slap in a couple of new areas at the edge of the
    map. That impassable mountain pass? It's open now, you can get to the
    barbarian village. The maze-like swamp, if you can get through it, now
    has a secret exit at the end , behind the lizard king's throne. You can
    get to the underworld from there. Great! More areas to explore!
    
    But like the construction of roads and motorways, if the capacity
    exists, people will use it. Your new areas will become just as
    populated as the rest of the world, partly by the casual players
    exploring, but also by the more hardcore contingent working their way
    through the grind. There are plenty of players who sign in, buff
    themselves up, and automatically make their way to:
    
    - Area A (where the easiest monsters with the best pHaT l3wT) to see if
    anyone has raided it recently. If it has, in 60 seconds, they can be at
    the edge of
    - Area B (which may well be on the other side of the continent, but has
    only marginally less l3wT than Area A). After that, it's
    - Area C then
    D.
    - Area E if convenient, or then on to
    - Area F. By that time, Area A has probably respawned, so stop by
    - Area G on the way, and then grind through
    - Area A and
    - B again. 
    
    I know a couple of places that have experimented with methods of
    deliberately restricting particular areas of the MMORPG, to make them
    feel a bit more exclusive and deserted. Players like to know about
    secret (profitable?) areas. They also like to make themselves look good
    by -telling other players- about secret areas, and -showing them- the
    secret areas. But, bizarrely, at the end of the day, they don't want
    other players to -actually go there- because then it wouldn't be their
    secret.
    
    Setting aside restrictions that are put in place on certain areas for
    "premium" paying customer-players, I thought I'd open up this topic for
    discussion.
    
    C.
    
    -- 
    
    Christopher Lloyd
    
    Email: crl199@alumni.soton.ac.uk
    Tel:   +44 (0) 7718 542837
  - |
    From: John Buehler <johnbue@msn.com>
    Date: Mon, 28 Jan 2008 18:17:03 GMT
    Subject: [MUD-Dev2] Player Choice - How Much is Too Much?
    In-Reply-To: <2E058EFA-035A-43B3-AA38-CC3D2DD20F2D@alfar.com>
    References: <1200937927.443.1232441719@webmail.messagingengine.com>
          <2E058EFA-035A-43B3-AA38-CC3D2DD20F2D@alfar.com>
    Message-ID: <BAYC1-PASMTP121EDA93AB7DB7957CF531B4380@CEZ.ICE>
    
    Amanda Walker writes:
    
    > My personal theory about this ("I have a theory, and it is mine") is
    > that as the VR aspects get more immersive, the incentive for RP
    > drops.  You no longer have to paint pictures in your mind's eye from
    > the DM's description or a paragraph of text--it's all just there.
    
    Agreed.  Not only is the temptation fading, but the opportunities are
    lessening as well.  I find the trend towards realism somewhat
    counter-productive.  Those who want an alternate life in a virtual world
    welcome it.  I know that I find it rather distasteful.  It's taking the fun
    out of gaming, completely independent of role-playing.
    
    When I play Chess, I don't want the pieces battling it out realistically,
    leaving blood and bodies all over the board.  Abstraction can be a nice
    thing.
    
    JB
'1997-02':
  - |
    Message-Id: <005k80j_@generated-message-id.listlibrary.net>
    X-ListLibrary-Added-Header: Message-Id
    From: S001GMU@nova.wright.edu
    Date: Fri, 28 Feb 1997 16:40:04 -0500 (EST)
    Subject: Re: Quadtrees?
    
    >> do you know of any good books that I can read up on some of those
    >algorithms
    >> specifically the Peano, Hilbert or Morton curves you mentioned?
    >> 
    
    >"The Design and Analysis of Spatial Data Structures" by Samet (Addison
    >Wesley) is a great primer on this stuff and spatial data structures in
    >general. However, save 30 bux...
    
    >Peano and Morton are two names for the same thing. A space filling curve is
    >one that can cover all the points in a grid without ever crossing over
    >itself. Hilbert is kinda odd and computationally a bit nasty to work with,
    >but Morton is easy.
    
    <Alg snipped>
    
    thanks!  I'll probably look into the book anyway.  Sounds like something
    incredibly usefull to have around.  ;)
    
    If you want to make up that picture, go ahead.  send it to
    s001gmu@desire.wright.edu
    
    Mime encoding is fine.  if that doesn't work, I'll let you know and we can work
    something else out.  ;)
    
    -Greg
  - |
    Message-Id: <005k83dP@generated-message-id.listlibrary.net>
    X-ListLibrary-Added-Header: Message-Id
    From: S001GMU@nova.wright.edu
    Date: Fri, 28 Feb 1997 15:13:43 -0500 (EST)
    Subject: Re: Quadtrees?
    
    >As far as objects go, their are various point-based structures that come to
    >mind including the sparse matrix, K-D trees, and point-based quadtrees.
    >Depending on how fancy you want to be, it's handy not only to ask "is there
    >an object here?" but it is also handy to look for the nearest object from
    >here.. let's you do things like bring critters to life only when folks
    >approach (or leave), also let's you determine a range for how far folks can
    >hear things that hum, see things that are lit, etc. The classic
    >implementation is pointer-based, but for large implementations (and we
    >expect to index several thousand items) there are linear implementations.
    >Basically you implement a B-Tree and then use some space-filling curve
    >(Peano, Hilbert et. al.) to index the tree's contents (your objects). The
    >Peano or Morton curve is particularly nice 'cuz you can do algebra on it
    >and the code also implicitly tells you the depth and quadrant of the
    >corresponding pointer-based tree. The B-Tree behavior works well for a mud
    >cuz usually huge chunks of your world aren't being played... so you just
    >cache the active nodes/pages of the tree. Insertion and deletion can be
    >expensive, but there are all sorts of ways to fudge things so you don't
    >rebuild the tree every time. For rooms (walls etc.) the tree becomes
    >read-only. Or am I going way overboard here?
    
    do you know of any good books that I can read up on some of those algorithms
    specifically the Peano, Hilbert or Morton curves you mentioned?
    
    I'd say, instead of using a read only tree to handle objects that characters
    can't move (like the walls of a room or something), just attach a weight and
    structural integrity to the object, where the structural integrity shows how
    much weight an object can take (counting it's own) before it collapses.  Just
    set the weight fairly high (a few tons?  :) and the structural integrity to
    the weight of the object (for fragile objects).  Lifting the object would
    apply an unballanced force on the object, which for MUD purposes we can
    probably get away with counting as weight.  That way, if someone did manage to
    lift the wall, it'd probably fall apart all over them, unless they used some 
    other means to increase it's structural integrity.  If you felt like it you
    could actaully calculate the forces involved and get more detail out of it,
    but for most purposes I think it'd be sufficient to just assume an object with
    weight = structural integrtiy would fall apart when moved.
    
    I think it'd make things much more interesting.  You could do things like have
    corpses crumble just by being touched (to simulate incredible age), or walls
    collapse on characters, etc.  
    
    we've had discussions before about how to deal with areas where no players
    happen to be hanging out...  I think we decided it'd depend on how much of a
    simulation you want your mud to be.  :)
    
    -Greg
  - |
    "Message-Id: <005k84Xy@generated-message-id.listlibrary.net>
    X-ListLibrary-Added-Header: Message-Id
    From: "Chris Gray" <cg@ami-cg.GraySage.Edmonton.AB.CA>
    Date: Fri, 28 Feb 97 06:58:53 MST
    Subject: Re: Quadtrees?

    :I am wondering why quadtrees would be so great for spatial representation
    :as it is used in a mud. As you will remember, a quadtree subdivides a
    :region into 4 subregions and makes quadtrees of those until the subregions
    :are uniform, so that you only keep information about things that are
    :different in a region (ok this desc stinks). But in a mud you need to do
    :lots of spatial relation searches, like all the objects within a range of 3.
    :Why not use a list of objects that is multi indexed on X and Y values?
    
    I'm certainly no expert in this stuff, but it seems to me that quadtrees
    aren't being advised for individual objects, but for properties, the
    value of which is needed at every location within the grid. As in the
    previous example, you could use one quadtree for 'forest-ness', another
    for 'mountain-ness", etc. This allows you to automatically generate the
    description/picture/representation of a location in the grid, based on
    traversing the small quadtree to get the property value.
    
    Objects are a different matter. They are each individual, and possibly
    unique. With objects, the concern is more "what objects are here?". An
    indexed sparse array of some kind works for that. Another possibility is
    to have a quadtree that essentially represents "something-is-here-ness",
    and terminates in pointers to lists of objects as needed. Most locations
    contain nothing, and so are not explicitly represented in the quadtree.
    The trouble with this is that it requires that the quadtree go down to
    the individual location in resolution, whereas for other properties, they
    can often stop considerably before that point. Also, objects can be moved,
    resulting in the need to be able to dynamically change the quadtree. I
    vaguely recall that that is hard to do.
    
    My thinking has been to use a 3D sparse array, which can contain objects
    of differing sizes, hence visibilities. I'm pretty vague on how the details
    would work, however. :-(
    
    --
    Chris Gray   cg@ami-cg.GraySage.Edmonton.AB.CA
  - |
    Message-Id: <005k85gH@generated-message-id.listlibrary.net>
    X-ListLibrary-Added-Header: Message-Id
    From: coder@ibm.net
    Date: Thu, 27 Feb 97 20:06:36 -0800
    Subject: Re: Quadtrees?
    
    On 28/02/97 at 03:53 AM, Wout Mertens <Wout.Mertens@rug.ac.be> said: >Hi
    all,
    
    >I am wondering why quadtrees would be so great for spatial representation
    >as it is used in a mud. As you will remember, a quadtree subdivides a
    >region into 4 subregions and makes quadtrees of those until the
    >subregions are uniform, so that you only keep information about things
    >that are different in a region (ok this desc stinks). But in a mud you
    >need to do lots of spatial relation searches, like all the objects within
    >a range of 3.
    >Why not use a list of objects that is multi indexed on X and Y values?
    
    Unfortunately I have to go confront the IRS, so I'll have to keep this
    quick.  I think Quadtrees are a *very* bad way to approach spaces in MUDs
    as they don't lend themselves to the type of spatial processing that I
    think MUDs require.  My own temptation would be to go for something close
    to an R*-Tree approach (see below).
    
    The best idea I've come up with so far is two-fold.  One side describes
    spatial characteristics, and the other side describes object
    characteristics.  I seperate the two essentially as one defines _how_
    space changes, and the other defines the behaviour of the contents of that
    space.
    
    The whole idea for spaces is that nodes are only stored where there is a
    change in characteristic, with the contents of the node indicating _what_
    changes, and in what direction from the node.  
    
    Thus, taking the example of a land which is partly forested, and partly
    grassy, The only nodes that would be defined are those needed to define
    the border between them.  In this manner surfaces, boundaries, conditions,
    topology etc can be defined with a minimum of data.  
    
    An old post from the list may illuminate the general area (I think Carter
    is a member here now?  Hope so -- we wrote good stuff in r.g.m.*).  It
    actually says more about the stuff above than I have time for now.
    
    --<cut>--
    From: "Chris Lawrence" <clawrenc@xsvr1.cup.hp.com>
    Date: Thu, 12 Sep 1996 12:36:18 -0700
    Subject: Re: Rethinking Rooms (Very Long)
    
    > From: raz@mushroom.demon.co.uk (Raz)
    > Newsgroups: rec.games.mud.admin,rec.games.mud.misc,rec.games.mud.diku
    > Subject: Re: Rethinking Rooms
    >
    > [Moved the following quote from the Mob thread into this one]
    >
    > It was all I could do to contain my excitement when Orion Henry wrote:
    
    BTW I've invited him to join the list and set him subscription data in
    reply to his request.  If he's not here now, he should be soon.
    
    > > I've stuck with repops, but it's quite a bit more subtle.  That is,
    > > the system looks at an EMPTY area and considers what needs to be
    > > fixed - doors that should be locked, walls that should be repaired,
    > > mobs that should be "born" to fill holes in the population.
    >
    > Just a part in that paragraph that reminded me of an earlier thing that got
    > discussed:  It would presumably be nice to 'liven up' the playing
    > environment, for example by allowing characters to hack paths through
    > forests, rediscovering lost temples, etc, right?  Well, getting back to the
    > challenge of auto-generating Spaces, I'm curious as to how these two ideas
    > could be brought together efficently.
    
    This has been tickling the back of my cranium as well.  I like the idea of
    a stored mutating state for a generated space (or at least that's the way
    I think of it.)
    
    > To elaborate, the forest 'exits' (here the undergrowth blocking passage)
    > could easily hold values such as resistence to damage and the ammount of
    > hacking which is necessary to break through it, but this is only easy in
    > rooms that are predefined.  In the so-called 'virtual spaces' that
    > information could not be remembered though, because fields for this data
    > wouldn't exist, and assigning those bytes regardless (in the array which
    > maps coordinates to defined vnums) would be wasteful in the extreme, as in
    > this case only forest Spaces would make use of it...
    
    Which is probably the reason to explicitly NOT go in this direction. Its
    wasteful in the extreme.
    
    > I have a feeling I haven't explained that very well, but make what you can
    > of it =)  Anyone have ideas on how a 'living environment' like that could be
    > supported efficiently?  Perhaps I should say *other* ideas: bearing in mind
    > Carter T Shock's detailed (and overpowering for a poor pleb like me! ;) )
    > post regarding world storage.
    >
    > Raz
    
    I've encluded Carter's post below as reference material.  I suspect that
    your confusion sources to his references to R-Trees, Quad-Trees and the
    like as that's what got me.  Both R-Trees and QuadTrees are typically used
    in relation to image processing, but can be adapted for other uses.  Both
    actually map very nicely (if somewhat indirectly for QT's) to mapping
    auto-generated spaces.
    
    Possibly some references on the area would help clear up the
    definitions.
    
    >From http://www.cs.cuhk.hk/~drsam/methods.html:
    - --<cut>--
    What is R-Tree
    
    A R-Tree, proposed by Antonin Guttman[1], is an index structure for point
    and spatial data at the same time. Insert, delete and search can be
    intermixed without periodic reorganization. It uses a tuple to represent a
    spatial data in the database. In order to retrieve the data, each tuple
    has a unique identifier, tuple-identifier. At the leaf node of a R-Tree,
    it has index record that can reference the spatial data. The index record
    is (I, tuple-identifier). I is an n-dimensional rectangle and it is the
    bounding rectangle of the spatial data indexed. This rectangle is also
    known as minimal bounding rectangle, MBR. and each entry in
    tuple-identifier is the upper and lower bounds, [upper, lower], of the
    rectangle along the
    dimension. Non-leaf nodes contain entries (I, childnode-pointer) where I
    is the minimal rectangle bounding all the rectangles in the lower nodes'
    entries. Childnode-pointer is the pointer to a lower node in the R-Tree.
    Let M and m<=M/2 be the maximum and minimum number of entries can be
    filled into one node respectively.
    
    Properties of R-Tree
    
    A R-Tree satisfies the following properties:
    
        A R-Tree is a height balance tree and all leaves are on the same
        level.
    
        Root node has at least two children unless it is the leaf node.
        Every non-leaf node contains between m and M entries unless it is
        the root.
    
        For each entries (I, childnode-pointer) in a non-leaf node, I is
        the smallest rectangle that spatially contains all rectangles in
        its child nodes.
    
        Every leaf node contains between m and M index records unless it
        is the root.
    
        For each index record (I, tuple-identifier) in a leaf node, I is
        the smallest rectangle that spatially contains the n-dimensional
        data object represented by the indicated tuple.
    
    R*-Tree
    
    The R-tree is based on a heuristic optimization. The optimization
    criterion is to minimize the area of each enclosing rectangle in the inner
    nodes. R*-Tree which incorporates a combined optimization of area, margin
    and overlap of each bounding rectangle in the inner nodes was proposed in
    [6]. For slightly higher implementation cost, it outperforms the existing
    R-Tree variants.
    
        Minimizing the area covered by a bounding rectangle should
        minimize the dead space. This will improve performance since
        decisions which paths have to be traversed, can be taken on higher
        level
    
        Minimizing the overlap between bounding rectangles decreases the
        number of paths to be traversed.
    
        Minimizing the margin of a bounding rectangle will make the
        rectangle more quadratic. It is because for fixed area, the object
        with the smallest margin is the square. Quadratic rectangles can
        be packed easily and thus building a smaller rectangle.
    
    VP-Tree
    
    Conventional spatial index structures divide the multi-dimensional vector
    space into partitions which have approximately the same number of data
    points as each other. It facilitates in finding the nearest neighbor of a
    given query point because it is only necessary to touch a small number of
    partitions. Most partitioning methods are based on absolute coordinate
    values of the vector space. R-Tree and R*-Tree described before use this
    type of partitioning method. The structures partitioned in this way are
    useful for queries based on absolute coordinates, like range queries.
    However, in general, it does not maintain any distance information, such
    as distance between points within a partition and the partition's
    boundaries. Since this information is critical in pruning the search space
    for
    nearest-neighbor search, index structures using partitioning methods based
    on absolute coordinate are thus not so useful for
    multi-dimensional nearest-neighbor search.
    
    Nearest-neighbor search by definition is to find out one point with
    minimum point-to-point distance from a given query point, so it is natural
    to use partitioning method based on relative distance rather than absolute
    coordinate values. Vantage-Point tree, or VP-Tree, method was proposed by
    Peter N.Yianilos. It uses the partitioning method based on relative
    distance and aims for handling multi-dimensional nearest neighbor search.
    
    As mentioned before, VP-Tree method bases the partitioning on the relative
    distances among the data points, rather than their absolute coordinate
    values. It also bases on a particular vantage
    point. Actually, vantage point is nothing special but a point selected
    from a vector space, or a set of data points. However, the choice of
    vantage point plays an important role in the performance of indexing
    algorithm.
    
    - --<cut>--
    
    And for QuadTrees:
    
    - --<cut>--
    
    QUADTREE IMAGES by Bob Glickstein
    
    A ``quadtree'' is a means of encoding an image as a tree structure. Each
    node of the tree has up to four children.  The root node represents the
    entire image; its children represent the four quadrants of the entire
    image; their children represent the sixteen subquadrants; the children of
    those represent the sixty-four sub-subquadrants, and so on.
    
    A leaf node corresponds to a single pixel, and is marked with the color of
    that pixel (in this implementation, black or white only).  If a non-leaf
    node has two or more children of the same color, then that color is stored
    in the parent and the children are deleted.  Thus, if an entire quadrant
    (subquadrant, sub-subquadrant, etc.) of the image is white, that
    information can be stored in a single quadtree node, and all of the
    children of that node can be removed.
    
    For certain images, this encoding yields enormous savings in storage size. 
    Such images are typically line drawings or other bitmaps with several
    areas of solid black or white.  Images with a lot of dithering or
    stippling, such as scanned images, tend to yield little or no savings in
    space.
    
    An amusing aspect of quadtrees is that they can be displayed according to
    a depth-first or a breadth-first traversal of the tree.  In a depth-first
    traversal, first the prodemonant color of the entire image is displayed;
    then the predominant color of the first quadrant is displayed; then the
    predominant color of the first subquadrant of the first quadrant, and so
    on.  The user can watch the quadrants and subquadrants being drawn.  A
    breadth-first traversal, however, is much more interesting.  Since it
    displays first the predominant color of the entire image, followed by the
    predominant colors of the four major quadrants, followed by the
    predominant colors or the sixteen subquadrants, and so on, the effect is
    one of a gradually resolving image with finer and finer detail at each
    step.
    
    - --<cut>--
    
    Or to look at it another way, R-Trees, VP-Trees, and Quad-Trees provide a
    tree data structure where walking the tree from the root node down towards
    the leaves provides finer and finer grained data about the location, with
    each system providing various optimisations for that progression.  For
    QT's the progression is exactly that of providing more and more finely
    grained data.  For R-Trees and the like, the progression is that of
    detailing more and more accurately what data sets (nodes) define a
    specific location or area.
    
    I've not been able to find a good source for what he describes as "morton
    codes", tho I have run into the concept before (and don't remember any
    implementation details or algorithms).  <<Can anyone help here?>>  However
    I think the concept he describes is fairly clear and understandable.
    
    My own thoughts I posted at the time:
    
    } Another option, which could be done as an extension of your idea for
    } the mapping/surface portion, is to avoid the concept of continuous
    } mapping.  Instead only those specific coordinate points (cells) would
    } be defined which deliniate changes in pattern in the
    } surface/map/object.  Additionally a cell could define its linkage, or
    } lack of linkage, and the character of that linkage, with other
    } immediately proximate points
    }
    } In this way the map would be be a net of defined points and
    } interpolations between those points.  A sparsely detailed area would
    } consist of very few defined points and render/access quickly.  A high
    } detailed area would have far more defined points and could provide a
    } computational challenge.
    
    In a crude sort of way you could consider this derived from fractal
    compression, or at least the concept of a node which marks a change of
    characteristic, and having that node also indicate the quality of the
    changed characteristic when moving in various directions from the node
    bears some resemblance.  (eg The node says that this the edge of the
    water.  Everything to the south and down of the node is water, and
    everything else in every other direction is not water)
    
    I believe this could be extended in line with Carter's system to offer a
    pretty slick system.
    
    Consider a system ala:
    
      Nodes are only stored if the _location_ of that node indicates a
        change in character in whatever that node is describing.
    
      If the characteristic being described is water, there would be nodes
        located along the edges of the body of water, but ONLY where the
        direction of that edge changed direction.  If the character of the
        water changed within its space (eg colour, waves, etc) nodes would
        only be present at the locations where the characteristic changed.
    
      Thus there would be nodes all around edge of the area where the
        water changed from blue to green, with only just enough nodes to
        define the shape of that area.
    
      Store the nodes in say an R*-Tree as described above, and finding
         the the nodes which affect the view of a player located at
         specific coordinates is just a matter of descending the tree
         until finding a node which is larger than the player's view, but
         whose children are smaller than the player's view.  Then just
         descend from there to define the area.
    
    Now add in the concept of having multiple trees, with each tree
    representing a different characteristic of the "land".  Say one tree could
    be weather, another could be object locations cross linked with object
    descriptions/definitions, a third could be light level, another define the
    surface of the land etc.
    
    You could even cross-link the trees to each other to help quickly locate
    the nodes relevant to a given area.  Heck you could actually just make it
    one R*-Tree and have each node be one of a variety of types so that as the
    tree is descended the different types fill in as their unique
    characteristics change.
    
    Thinking about this has gotten me thinking further about the
    possibilities of a true graphical MUD ala VRML.  I could see definite
    possibilities for coding an R*-Tree of the VRML descriptions of the
    various objects in game, and then following an algorithm something like
    this to draw the image for the end user:
    
      Presuming that the structure of VRML supports some concept of detail
      level, and thus the ability to retrieve only the relevant data about
      an object at a given detail level (eg you can't see the crags on the
      mountain in the far distance, but you can when you are close to it):
    
      From root of tree, descend tree.
    
      For each node, determine the spatial distance of that node from the
      player.
    
      If "close enough", get data from that node at the resolution level
      comparable for the distance to the node.  ie of the node is close,
      get highly detailed data.  If farther away, get less detailed.
    
      Draw and render as appropriate, rezz'ing in the image.
    
    Noting again that I don't know squat about VRML, or if it would lend
    itself to this at all.
    
    None of this of course registers the _change_ to the location because of
    recent events there (eg hack down the trees).  This could be done by
    inserting nodes in the R-Tree to define new changes in characterisitic. 
    Consider the case of two nodes:
    
      NodeX<---distance--->NodeY
    
    NodeX is defined as light scrub for everything east of it.  NodeY is
    defined as heavy forest for everything east of it.  (I'm simplifying a lot
    here, as normally each node would also define its relationship to other
    proximate nodes).
    
    A player happens to be standing somewhere in the light forest, and lights
    a fire.  There is now a smoke plume, and so a new node is created.
    
      NodeX(scrub)<--->NodeZ(smoke)<--->NodeY
    
    Later on he walks a bit and hacks out a clearing:
    
      NodeX(scrub)<--->NodeZ(smoke)<--->NodeQ(clearing)<--->NodeY
    
    After a while the fire he started burns out, leaving a charred area:
    
      NodeX(scrub)<--->NodeR(charred)<--->NodeQ(clearing)<--->NodeY
    
    Of course in actual fact the structure would be a heck of a lot messier
    than this, as the smoke plume would have to have boundaries, and would
    have considerable height.  This it would probably be decribed by say half
    a dozen nodes sketching out a circle (the base of the plume) and a series
    of matching nodes describing how the plume ascends thru space.  Similar
    would be true for the clearning, and ultimately for the charred area when
    it replaces the smoke.
    
    | From: ctso@umiacs.umd.edu (Carter T. Shock)
    | Newsgroups: rec.games.mud.admin,rec.games.mud.misc,rec.games.mud.diku
    | Subject: Re: Rethinking Rooms
    |
    | In article <840439466.9428.1@mushroom.demon.co.uk>,
    | Raz <raz@mushroom.demon.co.uk> wrote:
    | >[Conversation moved from 'Skill-based systems' to here =) ]
    | >
    | >representing the whole world on a matrix of 1m x 1m squares... =)
    | >
    | [snip]
    | >
    | >Yep, plus it's a sod to map, and the values on the axes would get
    | >astronomical (imaging mapping a world the size of Earth with 1m x 1m
    | >units... circumference is, what, 35000kms?  Ouch.)
    | >
    | [snip]
    | >Oh, while I remember: my rambling diatribe above doesn't even begin to
    | >include the joys of the Z axis! =)  It's no problem at all to allow players
    | >to fly over any of the outdoor locations in the game,
    |
    | >From the player's perspective, yeah, it could be a bear to map, but
    | then maps (and movement) could be more natural. If we're going to
    | allow the player to sight distant objects, then it is reasonable to
    | have them map by landmark. (follow the river until you see the
    | mountains.. etc. perhaps an orienteering skill? :)
    |
    | The only other obstacle appears to be disk storage and granularity of
    | your grid. In short, the 1m x 1m granularity poses no special
    | problems. You can even go smaller if you want. The trick is to map
    | only "what's there".
    |
    | I'm kind of excited to have stumbled on this topic, as I've started to
    | build the rudiments of such a toy. The basics go like this:
    |
    | Assume for the moment that we've got a 1m x 1m gridding of the
    | world. We'll talk about how to store it efficiently in a minute.
    |
    | Rather than keeping all known information about the world in a single
    | grid with each cell having lots of attributes, we'll break it up into
    | several layers. One layer can be a resource map (description of where
    | ores and other fun raw materials are found). Another can be forest
    | cover, a third can be water. Each of these can be represented as a
    | collection of regions. i.e. there is absolutely no reason to go thru
    | the damned grid and mark every single cell as "water" or "not-water".
    | You just declare it as a region and throw it into an appropriate
    | structure (like a region quadtree or an R-Tree). These fancy spatial
    | data structures can store off the whole world in very little space.
    |
    | For buildings and such, store them as polygons in either an R-Tree or
    | a PMR-Quadtree. Again, no reason to ever store off the explicit cells
    | in the grid, only those objects that are in the cells.
    |
    | Elevation is a bit trickier. If you maintain the previous data
    | structures in 3-D they can get kinda big, and the average world
    | doesn't tend to have many discontinuous tall features (not too many 1
    | meter square, mile high objects floating 100 feet off the ground)
    |
    | You can do elevation with additional region maps, one for each step in
    | elevation. Limit things by saying your people can only fly so high
    | before the air runs out or dig so deep before they hit magma and fry.
    |
    | So, how much space does it take to encode a point in an earth sized
    | world on a 1m x 1m grid? First things first, cheap and dirty way to do
    | a round world as a flat representation is to generate a square matrix
    | and stand it on one corner (like a diamond). Moving from square to
    | square is trivial except for the edges where you need to wrap the same
    | "latitude". Again not hard, but you have to do it. Each cell needs a
    | unique code. The earth is about 40,000km around at the equator.
    | Let's make it a 40,000km sphere.
    |
    | 40,000,000m / (2^32) = .009
    |
    | So, if we grid the earth using a long integer, minimum granularity is
    | what? 9 millimeters?
    | So, "longitude" and "latitude" are longs.
    | Altitude...
    | Make the earth's crust and breatheable atmosphere 20 miles deep/high
    | ~100K feet
    | ~33km
    | 2^15 = 32K
    |
    | So, with a vertical granularity of 1 meter, you can do about 40 miles
    | with a 16 bit short.
    |
    |
    | The final trick is coming up with a way to store this stuff off on
    | disk such that you can get it back in a hurry. Bonus points if you
    | come up with location codes for objects (rooms, structures, people)
    | that result in objects that are spatially close being stored close
    | together out on the disk.
    |
    | Again, trivial. Any space filling curve will do. Morton codes
    | are easiest. It works like this:
    |
    | given an x,y,z location, interleave the bits of the three values
    | to produce a single key, then sort all objects using that key.
    |
    | Example: using just x = 5, y = 3
    | x = 0101
    | y = 0011
    |
    | y-major code = 00011011
    | x-major code = 00100111
    |
    | The beauty of this is that the code preserves in its most significant
    | bits the most significant bits of the individual pieces that were used
    | to make it. It's also nice because you can do range searches. To find
    | all objects in the list in a 4m x 4m area (assuming a granularity
    | of 1m) you search the list with a key like: 1001XXXX The key matches
    | any code with 1001 as the first 4 bits and anything in the last 4
    | bits. So things like "this sound can be heard for 30 meters" and
    | "everybody within a mile radius dies" become trivial.
    |
    | Sorry about the length, but it really is pretty easy to store a highly
    | detailed world without using up gobs of space.
    | 	-Todd
    | ..
    | |-------------------------------------------------------------------------|
    | |      Carter T. Shock          |        University of Maryland           |
    | |    ctso@umiacs.umd.edu        | Institute for Advanced Computer Studies |
    | | "Onward through the fog..."   |      #include <std/disclaimer.h>        |
    --<cut>--
    
    --
    J C Lawrence                               Internet: claw@null.net
    ----------(*)                              Internet: coder@ibm.net
    ...Honourary Member of Clan McFud -- Teamer's Avenging Monolith...
  - |
    Message-Id: <005k85m6@generated-message-id.listlibrary.net>
    X-ListLibrary-Added-Header: Message-Id
    From: "Carter T Shock" <ctso@umiacs.umd.edu>
    Date: Fri, 28 Feb 1997 16:16:53 -0500
    Subject: Re: Quadtrees?
    
    > do you know of any good books that I can read up on some of those
    algorithms
    > specifically the Peano, Hilbert or Morton curves you mentioned?
    > 
    
    "The Design and Analysis of Spatial Data Structures" by Samet (Addison
    Wesley) is a great primer on this stuff and spatial data structures in
    general. However, save 30 bux...
    
    Peano and Morton are two names for the same thing. A space filling curve is
    one that can cover all the points in a grid without ever crossing over
    itself. Hilbert is kinda odd and computationally a bit nasty to work with,
    but Morton is easy.
    
    In a nutshell: interleave the bits.
    
    Given a coordinate [3,5] represented with 4 bits each you have:
    X = 0011
    Y = 0101
    Morton is: 00011011 or 00100111
    
    0 0 1 1
     0 1 0 1
    00011011
    
    Your choice as to whether to start with the X or Y bit as most significant.
    Here's the sweet part... because the most significant bits of the code
    represent the most significant bits of the two coordinates you can use it
    as a sorting key. Codes that are numerically close are also spatially
    close. There's also a direct correspondence between the code and
    quadrants/depth in quadtrees but I'm not swift enough with ASCII graphics
    to draw it here. I can do a picture and send it via MIME if ya want. Also
    as mentioned, you can do algebra on them. Need to offset the coordinates by
    an X,Y? make a code for the offset and add/subtract it in.
    You can also do range searching by masking off low-order bits. Finally,
    this is why using B-Tree type stuff works.. the keys in the tree are just
    the interleaved codes. It's one of those things that once discovered you
    bonk yourself on the head and say "why didn't I think of that?"
          -Todd
  - |
    Message-Id: <005k864U@generated-message-id.listlibrary.net>
    X-ListLibrary-Added-Header: Message-Id
    From: "Carter T Shock" <ctso@umiacs.umd.edu>
    Date: Fri, 28 Feb 1997 11:25:57 -0500
    Subject: Re: Quadtrees?
    
    > previous example, you could use one quadtree for 'forest-ness', another
    > for 'mountain-ness", etc. This allows you to automatically generate the
    > description/picture/representation of a location in the grid, based on
    > traversing the small quadtree to get the property value.
    
    exactly
    
    > 
    > Objects are a different matter. They are each individual, and possibly
    > unique. With objects, the concern is more "what objects are here?". An
    
    Two points: 
    1) Quadtrees are not the be-all and end-all of spatial data structures.
    Just what came to mind as I wrote.
    2) Quadtrees come in lots of flavors.
    
    The "forest-ness" et. al. would most likely be done as a region quadtree.
    It just works out that these are handy structures for binary spatial tests.
    Any region is either forest or it ain't. The particularly nice thing about
    these structures (versus other representations) is the ability to perform
    efficient spatial joins. Recall that you can use these puppies for more
    than simple terrain. If you support clans you can describe a clan's "zone
    of influence", you can do no magic, lawful, silent, safe, etc. areas. The
    spatial join property is more of an implemetor's bonus. It lets you ask
    questions like "show me all of the areas that are forest but no-magic" so
    you can tune those spots where (ferinstance) druid spells will fail.
    
    As far as objects go, their are various point-based structures that come to
    mind including the sparse matrix, K-D trees, and point-based quadtrees.
    Depending on how fancy you want to be, it's handy not only to ask "is there
    an object here?" but it is also handy to look for the nearest object from
    here.. let's you do things like bring critters to life only when folks
    approach (or leave), also let's you determine a range for how far folks can
    hear things that hum, see things that are lit, etc. The classic
    implementation is pointer-based, but for large implementations (and we
    expect to index several thousand items) there are linear implementations.
    Basically you implement a B-Tree and then use some space-filling curve
    (Peano, Hilbert et. al.) to index the tree's contents (your objects). The
    Peano or Morton curve is particularly nice 'cuz you can do algebra on it
    and the code also implicitly tells you the depth and quadrant of the
    corresponding pointer-based tree. The B-Tree behavior works well for a mud
    cuz usually huge chunks of your world aren't being played... so you just
    cache the active nodes/pages of the tree. Insertion and deletion can be
    expensive, but there are all sorts of ways to fudge things so you don't
    rebuild the tree every time. For rooms (walls etc.) the tree becomes
    read-only. Or am I going way overboard here?
          -Todd
  - |
    Message-Id: <005k87t-@generated-message-id.listlibrary.net>
    X-ListLibrary-Added-Header: Message-Id
    From: Wout Mertens <Wout.Mertens@rug.ac.be>
    Date: Fri, 28 Feb 1997 03:53:46 +0100 (MET)
    Subject: Quadtrees?
    
    Hi all,
    
    I am wondering why quadtrees would be so great for spatial representation
    as it is used in a mud. As you will remember, a quadtree subdivides a
    region into 4 subregions and makes quadtrees of those until the subregions
    are uniform, so that you only keep information about things that are
    different in a region (ok this desc stinks). But in a mud you need to do
    lots of spatial relation searches, like all the objects within a range of
    3.
    Why not use a list of objects that is multi indexed on X and Y values?
    
    Wout.
'1997-03':
  - |
    Message-Id: <005k82ke@generated-message-id.listlibrary.net>
    X-ListLibrary-Added-Header: Message-Id
    From: "Carter T Shock" <ctso@umiacs.umd.edu>
    Date: Sun, 2 Mar 1997 06:09:56 -0500
    Subject: Re: Quadtrees?
    
    > [Discussion of "B-tree with space-filling curve to index the tree"]
    > 
    > Ahm, you've totally lost me here! I know what B-trees are (did one for
    > a database system I wrote), and I've heard of space-filling curves, but
    > I can't imagine how a curve can be used to index things. Can you say
    > some more about this?
    
    Lessee... if it's a curve, then there is a function that generates it. For
    the Morton curve we'll call that function M(x,y). The range and domain of M
    are both the set of Integers (i.e. the function is not continuous, but is
    defined for all integral values of x and y). So, if we generate values of
    M(x,y) for all values of x and y, the result is a series of integers. In
    this case it's called the Morton series.
    
    What I'm getting at is that the set of integer x and y is an infinite,
    dense matrix of equidistant points in 2 dimensional space. For each of
    these points there exists a unique value in the Morton series. This value
    is derived by interleaving the bits of the x and y coordinates as described
    in previous mail.
       
    So.. now we want to index a collection of points in 2 dimensional space
    (btw, it all works in any number of dimensions you want). Any index
    (B-Trees included) requires that we have some key for each datum we index.
    For simplicity's sake, we'll say that the key must have >, <, and ==
    defined for it. Now, if you wanted to, you could store off both the x and y
    from your points and derive >, <, and == operators that compared the
    tuples. Equality is pretty easy, but greater than and less than get a
    little funky.. is [2,3] greater than or less than [3,2]? But wait! For any
    point (x,y) there exists some value in the morton series M(x,y). M(x,y) is
    just an integer and >, <, == are all trivially defined for integers. In
    short, you use the morton codes for the points to sort the points in your
    index.
    
    You don't have to use a B-Tree.. anything will do, but the B-Tree is
    attractive for large data sets used with limited core space. Next mail
    shows how to do a linear quadtree.
          -Todd
  - |
    Message-Id: <005k84IN@generated-message-id.listlibrary.net>
    X-ListLibrary-Added-Header: Message-Id
    From: coder@ibm.net
    Date: Sun, 02 Mar 97 11:17:25 -0800
    Subject: Re: Quadtrees?
    
    On 28/02/97 at 06:58 AM, cg@ami-cg.GraySage.Edmonton.AB.CA (Chris Gray)
    said:
    
    >My thinking has been to use a 3D sparse array, which can contain objects
    >of differing sizes, hence visibilities. I'm pretty vague on how the
    >details would work, however. :-(
    
    Sounds a little like an R*-Tree.  I recently reposted an old post from
    Wout's list with definitions and descriptions of quadtrees etc.  For me
    the beauty of an R*-Tree is that it allows very easy localised processing. 
    To find all locally relevant data nodes, just ascend the tree from the
    current location until you find a rectangle which bounds the requested
    area.  Another nice point is that multiple "thematic" schema can be easily
    bound within the same R*-Tree.
    
    --
    J C Lawrence                               Internet: claw@null.net
    ----------(*)                              Internet: coder@ibm.net
    ...Honourary Member of Clan McFud -- Teamer's Avenging Monolith...
  - |
    Message-Id: <005k85u2@generated-message-id.listlibrary.net>
    X-ListLibrary-Added-Header: Message-Id
    From: "Chris Gray" <cg@ami-cg.GraySage.Edmonton.AB.CA>
    Date: Fri, 28 Feb 97 18:51:50 MST
    Subject: Re: Quadtrees?
    
    [Discussion of "B-tree with space-filling curve to index the tree"]
    
    Ahm, you've totally lost me here! I know what B-trees are (did one for
    a database system I wrote), and I've heard of space-filling curves, but
    I can't imagine how a curve can be used to index things. Can you say
    some more about this?
    
    --
    Chris Gray   cg@ami-cg.GraySage.Edmonton.AB.CA
  - |
    Message-Id: <005k8738@generated-message-id.listlibrary.net>
    X-ListLibrary-Added-Header: Message-Id
    From: coder@ibm.net
    Date: Sun, 02 Mar 97 21:52:54 -0800
    Subject: Re: Quadtrees?
    
    On 28/02/97 at 04:40 PM, S001GMU@nova.wright.edu said:
    
    >Mime encoding is fine.  if that doesn't work, I'll let you know and we
    >can work something else out.  ;)
    
    As has been demonstrated by now, the list will forward simple MIME
    attachments properly.  There are minor limits however, the most
    significant of which is that the list software will NOT properly handle
    any of the multipart MIME business.  (This is not likely to change). 
    Simple attachments go thru fine tho.  All the other limitations are pretty
    well based on header lines.  The list software re-writes the entire
    header, so all extraneous X-* lines are lost for instance. 
    
    --
    J C Lawrence                               Internet: claw@null.net
    ----------(*)                              Internet: coder@ibm.net
    ...Honourary Member of Clan McFud -- Teamer's Avenging Monolith...
  - |
    Message-Id: <0stayput@generated-message-id.listlibrary.net>
    X-ListLibrary-Added-Header: Message-Id
    From: "Testy McTesterson" <test@example.com
    Date: Sun, 2 Mar 1997 06:09:56 -0500
    Subject: Re: should stay put
    
    This thread, which doesn't have a parent in 1997-02, shouldn't be moved.
