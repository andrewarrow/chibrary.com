x drop or commit all outstanding changes
x run check_cabinets and fix any errors
x write a first riak backend
x migrate get-theinfo, process-theinfo, theinfo to riak
x deserialize messages from hash in riak
x queue threader
x run threader
x update site to sinatra
x recode site to use riak

x download jwz threading doc and put it in doc/
x rip out all postgres functionality, replace with riak
x impose a max-width
x add precaching metadata to month/thread_previous_next link maker
x replace 'iconv' usage with String#encode, per warning
x do Table Data Gateway pattern for riak access
x standardize the to_hash/deserialize mismatch
x convert to riak storage:
x   list
x   container
x   message
x   summary
x   thread_list
x   thread_set
x   snippet (maybe from summary?)
x   call_number_list
x   timesort
x   redirect table
x   thread/message counts
x   sweep for any direct use of storage globals
x remove leading / from any keys
x replace the queue system
x rename to_hash/from_hash to serialize/deserialize
x correct spec syntax; # is instance, :: for class
x refactor the shit out of message
x extract a CallNumber, most likely
x extract call number generator
x split out Container data structure from MessageContainer
x ContainerStorage -> MessageContainerStorage and MessageSummaryContainerStorage
x Message: delegate from + n_subject down into email?
  migrate all tests to rspec
x ThreadSet: cache list of thread roots in order for n/p links
x ThreadSet: cache redirects (message -> thread root)
x ThreadSet: cache monthly message/thread counts
x split Message, Container initializers into two
x can ThreadHelper#remove_footer *not* call the storage layer? ugh
x can models be built so none call back up into the storage layer?
x can year and month be removed from ContainerStorage keys? - yes, w index
x Container.likely_split_thread? should ask Message about quoting, not regex
x rename web/controller to something better-suited
x rekey all call numbers to be base62; drop _ and - in ids
x remove overwrite from MessageStorage, look up message ids instead
x rewrite CallNumberGenerator to waste fewer bits
  have MessageStorage overwrite check both key and id_hash_bin
  clean up any messages with metadata edited into headers, ew (X-ListLibrary-*)
  Sy and Sym objects to encapsulate Slug, Year, + Month
  migrate all lists to riak
  add instantclick.io to pjax page loads
  false positive subject changes: http://localhost:9393/get-theinfo/2008/01/00hyE01p
x update text on about page
x move jobs into a proper job system
x move misc data in cachcedhash *someplace else*
  Email.date should parse Received headers first; fallback to Date from MUA
  clean up tests along the lines of Metz's magic tricks
  update to Ruby 2 - https://github.com/sup-heliotrope/sup/issues/22
  replace 1.8 hash syntax with 1.9
  override sinatra error pages
  restore google analytics
  re-import ruby-dev
  convert to html5
  check design on tablets and phones
  combine css stylesheets; make print stylesheet
  minify css and js
  talk to carl/sheila about rackspace credit hosting? @codersquid @nextdayvideo
  forward listlibrary.net/org to chibrary
  search and replace all instances of 'listlibrary'
  search and replace all instances of 'mail' with 'email'
  get /about
  get /search
  get /:slug/:year/:month/:call_number
  get /:slug/:year/:month
  get /:slug/:year
  get /:slug
  get /
  deploy
  check that google search works with new domain
  fix google analytics logging to only be included in prod
x update CallNumberGenerator so two import scripts won't collide constantly
  check chiphpug/message/2008/07/20080715202245.10853.qmail@mail.cellit.net for weird multi-line subject
  announce

Possible refactorings:
  store MonthCount in Redis
  Rename *Storage to Repo
  Rename *Generator to service/
  Create procedure/ for driving scripts?
  Move immutable objects to value/
  Some models to collection/
  Use tcrayford/Values in place of Struct
  Use ice_nine to make sure my objects are immutable
    module FlashFreeze ; def initiaize ; super ; IceNine.deep_freeze(self) ; end ; end ; # inside class: prepend FlashFreeze
  Use hamstergem/hamster in ThreadSet and other collections
  move Storage.serialize and .store to class methods?; I never keep obj around
  split Storage and Retrievage into separate objects?

Feature ideas:
  https://www.cs.cmu.edu/~enron/
  spam filtering
  add riak search with solr
  extract keywords - uncommon words per thread TD*IDF
  use keywrods to show related threads
  can fetchmail -B -l etc get the lost mail?
