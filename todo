x drop or commit all outstanding changes
x run check_cabinets and fix any errors
x write a first riak backend
x migrate get-theinfo, process-theinfo, theinfo to riak
x deserialize messages from hash in riak
x queue threader
x run threader
x update site to sinatra
x recode site to use riak

x download jwz threading doc and put it in doc/
x rip out all postgres functionality, replace with riak
x impose a max-width
x add precaching metadata to month/thread_previous_next link maker
x replace 'iconv' usage with String#encode, per warning
x do Table Data Gateway pattern for riak access
x standardize the to_hash/deserialize mismatch
x convert to riak storage:
x   list
x   container
x   message
x   summary
x   thread_list
x   thread_set
x   snippet (maybe from summary?)
x   call_number_list
x   timesort
x   redirect table
x   thread/message counts
x   sweep for any direct use of storage globals
x remove leading / from any keys
x replace the queue system
x rename to_hash/from_hash to serialize/deserialize
x correct spec syntax; # is instance, :: for class
x refactor the shit out of message
x extract a CallNumber, most likely
x extract call number generator
x split out Container data structure from MessageContainer
x ContainerStorage -> MessageContainerStorage and MessageSummaryContainerStorage
x Message: delegate from + n_subject down into email?
x ThreadSet: cache list of thread roots in order for n/p links
x ThreadSet: cache redirects (message -> thread root)
x ThreadSet: cache monthly message/thread counts
x split Message, Container initializers into two
x can ThreadHelper#remove_footer *not* call the storage layer? ugh
x can models be built so none call back up into the storage layer?
x can year and month be removed from ContainerStorage keys? - yes, w index
x Container.likely_split_thread? should ask Message about quoting, not regex
x rename web/controller to something better-suited
x rekey all call numbers to be base62; drop _ and - in ids
x remove overwrite from MessageStorage, look up message ids instead
x rewrite CallNumberGenerator to waste fewer bits
x clean up any messages with metadata edited into headers, ew (X-ListLibrary-*)
x Sy and Sym objects to encapsulate Slug, Year, + Month
x clean up ActionController mentions
x update month_next_previous for current storage
x update text on about page
x move jobs into a proper job system
x move misc data in cachcedhash *someplace else*
x search and replace all instances of 'listlibrary'
x search and replace all instances of 'mail' with 'email'
x update CallNumberGenerator so two import scripts won't collide constantly
x update to Ruby 2.1 - https://github.com/sup-heliotrope/sup/issues/22
x Email.date should parse Received headers first; fallback to Date from MUA
x Rename *Storage to Repo
x Rename *Generator to service/
x Move immutable objects to value/
x Use tcrayford/Values in place of Struct
x Use ice_nine to make sure my objects are immutable
x replace 1.8 hash syntax with 1.9
  clean up tests along the lines of Metz's magic tricks
x   core_ext
x   helper
x   lib
x   service
x   value
x   model
    repo (remove the Fake doubles)
x clean up rig/sig/cng names
x re-attempt removal of X-ListLibrary-Added-Header, seen in mud-dev/2000/01
x missing MonthCount
x is there any reason CallNumber.new shouldn't raise on invalid?
x add index for looking up all lists
x move override fields (subject, date, etc.) up to Message, they're mutable
x use memoize/adamantium for frozen + memoization (yay) https://github.com/dkubb/adamantium
x rewrite filer as service... or repo?
x Message only knows its List so Sym and MessageRepo can get at its slug
  false positive subject changes: http://localhost:9393/get-theinfo/2008/01/00hyE01p
x web: use summaries for month pages
x move summary to value
x put blurb into month pages
x override sinatra error pages
x restore google analytics
x convert to html5
x in thread_list, sibling line is missing
  progressive threading:
x   Thread class knows what a thread is
x   ThreadRepo stores summaries;
x     stores summaries of all messages in one thread
x     index slug, MessageId hash, n_subject hash, sym
x     can pull a hydrated thread by hitting MessageRepo with get_many
    ThreadSet disappears
    update MonthCount + MonthCountRepo to pull from ThreadRepo
    remove:
x     SummarySetRepo
      TimeSort and TimeSortRepo
      ThreadSetRepo
x     MessageContainerRepo
x     SummaryContainerRepo
x     ContainerRepo
x     RedirectMap and RedirectMap repo
x     CallNumberList
x   Filer chunks messages to thread by n_subject hash
    Threader works on small batches of or individual messages
    Threader finds threads by MessageId and n_subject hash
    urls lose year, month
    with or without slug?
      /m/call_number -> /t/call_number#call_number
      /message/call_number -> /thread/call_number#call_number
      /linux-kernel/call_number -> /linux-kernel/call_number#call_number
    Month view pulls all threads via index
    Thread view asks ThreadRepo for all messages
  check design on tablets and phones
  combine css stylesheets; make print stylesheet
  minify css and js
  forward listlibrary.net/org to chibrary
x get /about
x get /search
  get /:slug/:year/:month/:call_number
  get /:slug/:year/:month
  get /:slug/:year
  get /:slug
  get /
  talk to carl/sheila about rackspace credit hosting? @codersquid @nextdayvideo
  migrate functional tests to rspec
  hand-check the pending thread_set specs
  migrate all lists to riak
  retrieve messages from archive/old_list/_listlibrary_no_list
  run and test threader
  deploy
  re-import ruby-dev
  check that google search works with new domain
  fix google analytics logging to only be included in prod
  check chiphpug/message/2008/07/20080715202245.10853.qmail@mail.cellit.net for weird multi-line subject
  announce
  test fetcher

Possible refactorings:
  Body class for blurbs, quoting (incl top posting), and compress quotes
  empty RedirectMaps?
  datetime for when archived
  Models to entities/
  Slug value
  Create procedure/ for driving scripts?
  store MonthCount in Redis
  Some models to aggregate/?
  Use hamstergem/hamster in ThreadSet and other collections
  move Storage.serialize and .store to class methods?; I never keep obj around
  split Storage and Retrievage into separate objects?
  store deeply nested items (SummarySet, etc) as flat list + parentings to avoid json serialization limits

Feature ideas:
  mark up italics in //
  mark up bold in **
  have MessageStorage overwrite check both key and id_hash_bin
    (need when compiling an archive from multiple others)
  add instantclick.io to pjax page loads
  https://www.cs.cmu.edu/~enron/
  spam filtering
  add riak search with solr
  extract keywords - uncommon words per thread TD*IDF
  use keywrods to show related threads
  can fetchmail -B -l etc get the lost mail?
  minitest?
  arhive blog posts + comments
